var j=(W,X)=>()=>(X||W((X={exports:{}}).exports,X),X.exports);var x=j((Z0,d)=>{Z0.serialize=function(W){return W&&typeof W.toJSON==="function"?W.toJSON():W}});var p=j((_0,l)=>{var g=x().serialize;l.exports=function W(X,$){if($=g($),$===null||typeof $!=="object"||Array.isArray($))return $;if(X=g(X),X===null||typeof X!=="object"||Array.isArray(X))X={};var D=Object.keys($);for(var J=0;J<D.length;J++){var Y=D[J];if(Y==="__proto__"||Y==="constructor"||Y==="prototype")return X;if($[Y]===null){if(X.hasOwnProperty(Y))delete X[Y]}else X[Y]=W(X[Y],$[Y])}return X}});var o=j((L0,f)=>{f.exports=function W(X,$){if(X===$)return!0;if(X&&$&&typeof X=="object"&&typeof $=="object"){if(X.constructor!==$.constructor)return!1;var D,J,Y;if(Array.isArray(X)){if(D=X.length,D!=$.length)return!1;for(J=D;J--!==0;)if(!W(X[J],$[J]))return!1;return!0}if(X.constructor===RegExp)return X.source===$.source&&X.flags===$.flags;if(X.valueOf!==Object.prototype.valueOf)return X.valueOf()===$.valueOf();if(X.toString!==Object.prototype.toString)return X.toString()===$.toString();if(Y=Object.keys(X),D=Y.length,D!==Object.keys($).length)return!1;for(J=D;J--!==0;)if(!Object.prototype.hasOwnProperty.call($,Y[J]))return!1;for(J=D;J--!==0;){var Z=Y[J];if(!W(X[Z],$[Z]))return!1}return!0}return X!==X&&$!==$}});var i=j((P0,c)=>{var Q0=function(W,X){if(W.length!==X.length)return!1;for(var $=0;$<W.length;$++)if(!G0(X[$],W[$]))return!1;return!0},G0=o(),_=x().serialize;c.exports=function W(X,$){if(X=_(X),$=_($),X===null||$===null||typeof X!=="object"||typeof $!=="object"||Array.isArray(X)!==Array.isArray($))return $;if(Array.isArray(X)){if(!Q0(X,$))return $;return}var D={},J=Object.keys(X),Y=Object.keys($),Z,B,Q={};for(B=0;B<Y.length;B++)if(Z=Y[B],J.indexOf(Z)===-1)Q[Z]=!0,D[Z]=_($[Z]);var F={};for(B=0;B<J.length;B++)if(Z=J[B],Y.indexOf(Z)===-1)F[Z]=!0,D[Z]=null;else if(X[Z]!==null&&typeof X[Z]==="object"){var z=W(X[Z],$[Z]);if(z!==void 0)D[Z]=z}else if(X[Z]!==$[Z])D[Z]=_($[Z]);return Object.keys(D).length>0?D:void 0}});var t=j((V0,n)=>{n.exports=function W(X,$){if(X===null||$===null||typeof X!=="object"||typeof $!=="object"||Array.isArray(X)!==Array.isArray($))return $;var D=JSON.parse(JSON.stringify(X));return Object.keys($).forEach(function(J){if(X[J]!==void 0)D[J]=W(X[J],$[J]);else D[J]=$[J]}),D}});async function N(W,X){const $=await crypto.subtle.importKey("raw",typeof W==="string"?V.encode(W):W,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return crypto.subtle.sign("HMAC",$,V.encode(X))}async function b(W){return crypto.subtle.digest("SHA-256",typeof W==="string"?V.encode(W):W)}var P=function(W){return Array.prototype.map.call(new Uint8Array(W),(X)=>("0"+X.toString(16)).slice(-2)).join("")},h=function(W){return W.replace(/[!'()*]/g,(X)=>"%"+X.charCodeAt(0).toString(16).toUpperCase())},J0=function(W,X){const{hostname:$,pathname:D}=W;if($.endsWith(".r2.cloudflarestorage.com"))return["s3","auto"];if($.endsWith(".backblazeb2.com")){const B=$.match(/^(?:[^.]+\.)?s3\.([^.]+)\.backblazeb2\.com$/);return B!=null?["s3",B[1]]:["",""]}const J=$.replace("dualstack.","").match(/([^.]+)\.(?:([^.]*)\.)?amazonaws\.com(?:\.cn)?$/);let[Y,Z]=(J||["",""]).slice(1,3);if(Z==="us-gov")Z="us-gov-west-1";else if(Z==="s3"||Z==="s3-accelerate")Z="us-east-1",Y="s3";else if(Y==="iot")if($.startsWith("iot."))Y="execute-api";else if($.startsWith("data.jobs.iot."))Y="iot-jobs-data";else Y=D==="/mqtt"?"iotdevicegateway":"iotdata";else if(Y==="autoscaling"){const B=(X.get("X-Amz-Target")||"").split(".")[0];if(B==="AnyScaleFrontendService")Y="application-autoscaling";else if(B==="AnyScaleScalingPlannerFrontendService")Y="autoscaling-plans"}else if(Z==null&&Y.startsWith("s3-"))Z=Y.slice(3).replace(/^fips-|^external-1/,""),Y="s3";else if(Y.endsWith("-fips"))Y=Y.slice(0,-5);else if(Z&&/-\d$/.test(Y)&&!/-\d$/.test(Z))[Y,Z]=[Z,Y];return[$0[Y]||Y,Z]},V=new TextEncoder,$0={appstream2:"appstream",cloudhsmv2:"cloudhsm",email:"ses",marketplace:"aws-marketplace",mobile:"AWSMobileHubService",pinpoint:"mobiletargeting",queue:"sqs","git-codecommit":"codecommit","mturk-requester-sandbox":"mturk-requester","personalize-runtime":"personalize"},D0=new Set(["authorization","content-type","content-length","user-agent","presigned-expires","expect","x-amzn-trace-id","range","connection"]);class E{constructor({accessKeyId:W,secretAccessKey:X,sessionToken:$,service:D,region:J,cache:Y,retries:Z,initRetryMs:B}){if(W==null)throw new TypeError("accessKeyId is a required option");if(X==null)throw new TypeError("secretAccessKey is a required option");this.accessKeyId=W,this.secretAccessKey=X,this.sessionToken=$,this.service=D,this.region=J,this.cache=Y||new Map,this.retries=Z!=null?Z:10,this.initRetryMs=B||50}async sign(W,X){if(W instanceof Request){const{method:J,url:Y,headers:Z,body:B}=W;if(X=Object.assign({method:J,url:Y,headers:Z},X),X.body==null&&Z.has("Content-Type"))X.body=B!=null&&Z.has("X-Amz-Content-Sha256")?B:await W.clone().arrayBuffer();W=Y}const $=new k(Object.assign({url:W},X,this,X&&X.aws)),D=Object.assign({},X,await $.sign());delete D.aws;try{return new Request(D.url.toString(),D)}catch(J){if(J instanceof TypeError)return new Request(D.url.toString(),Object.assign({duplex:"half"},D));throw J}}async fetch(W,X){for(let $=0;$<=this.retries;$++){const D=fetch(await this.sign(W,X));if($===this.retries)return D;const J=await D;if(J.status<500&&J.status!==429)return J;await new Promise((Y)=>setTimeout(Y,Math.random()*this.initRetryMs*Math.pow(2,$)))}throw new Error("An unknown error occurred, ensure retries is not negative")}}class k{constructor({method:W,url:X,headers:$,body:D,accessKeyId:J,secretAccessKey:Y,sessionToken:Z,service:B,region:Q,cache:F,datetime:z,signQuery:r,appendSessionToken:e,allHeaders:W0,singleEncode:X0}){if(X==null)throw new TypeError("url is a required option");if(J==null)throw new TypeError("accessKeyId is a required option");if(Y==null)throw new TypeError("secretAccessKey is a required option");this.method=W||(D?"POST":"GET"),this.url=new URL(X),this.headers=new Headers($||{}),this.body=D,this.accessKeyId=J,this.secretAccessKey=Y,this.sessionToken=Z;let S,I;if(!B||!Q)[S,I]=J0(this.url,this.headers);if(this.service=B||S||"",this.region=Q||I||"us-east-1",this.cache=F||new Map,this.datetime=z||(new Date()).toISOString().replace(/[:-]|\.\d{3}/g,""),this.signQuery=r,this.appendSessionToken=e||this.service==="iotdevicegateway",this.headers.delete("Host"),this.service==="s3"&&!this.signQuery&&!this.headers.has("X-Amz-Content-Sha256"))this.headers.set("X-Amz-Content-Sha256","UNSIGNED-PAYLOAD");const M=this.signQuery?this.url.searchParams:this.headers;if(M.set("X-Amz-Date",this.datetime),this.sessionToken&&!this.appendSessionToken)M.set("X-Amz-Security-Token",this.sessionToken);if(this.signableHeaders=["host",...this.headers.keys()].filter((G)=>W0||!D0.has(G)).sort(),this.signedHeaders=this.signableHeaders.join(";"),this.canonicalHeaders=this.signableHeaders.map((G)=>G+":"+(G==="host"?this.url.host:(this.headers.get(G)||"").replace(/\s+/g," "))).join("\n"),this.credentialString=[this.datetime.slice(0,8),this.region,this.service,"aws4_request"].join("/"),this.signQuery){if(this.service==="s3"&&!M.has("X-Amz-Expires"))M.set("X-Amz-Expires","86400");M.set("X-Amz-Algorithm","AWS4-HMAC-SHA256"),M.set("X-Amz-Credential",this.accessKeyId+"/"+this.credentialString),M.set("X-Amz-SignedHeaders",this.signedHeaders)}if(this.service==="s3")try{this.encodedPath=decodeURIComponent(this.url.pathname.replace(/\+/g," "))}catch(G){this.encodedPath=this.url.pathname}else this.encodedPath=this.url.pathname.replace(/\/+/g,"/");if(!X0)this.encodedPath=encodeURIComponent(this.encodedPath).replace(/%2F/g,"/");this.encodedPath=h(this.encodedPath);const R=new Set;this.encodedSearch=[...this.url.searchParams].filter(([G])=>{if(!G)return!1;if(this.service==="s3"){if(R.has(G))return!1;R.add(G)}return!0}).map((G)=>G.map((U)=>h(encodeURIComponent(U)))).sort(([G,U],[v,u])=>G<v?-1:G>v?1:U<u?-1:U>u?1:0).map((G)=>G.join("=")).join("&")}async sign(){if(this.signQuery){if(this.url.searchParams.set("X-Amz-Signature",await this.signature()),this.sessionToken&&this.appendSessionToken)this.url.searchParams.set("X-Amz-Security-Token",this.sessionToken)}else this.headers.set("Authorization",await this.authHeader());return{method:this.method,url:this.url,headers:this.headers,body:this.body}}async authHeader(){return["AWS4-HMAC-SHA256 Credential="+this.accessKeyId+"/"+this.credentialString,"SignedHeaders="+this.signedHeaders,"Signature="+await this.signature()].join(", ")}async signature(){const W=this.datetime.slice(0,8),X=[this.secretAccessKey,W,this.region,this.service].join();let $=this.cache.get(X);if(!$){const D=await N("AWS4"+this.secretAccessKey,W),J=await N(D,this.region),Y=await N(J,this.service);$=await N(Y,"aws4_request"),this.cache.set(X,$)}return P(await N($,await this.stringToSign()))}async stringToSign(){return["AWS4-HMAC-SHA256",this.datetime,this.credentialString,P(await b(await this.canonicalString()))].join("\n")}async canonicalString(){return[this.method.toUpperCase(),this.encodedPath,this.encodedSearch,this.canonicalHeaders+"\n",this.signedHeaders,await this.hexBodyHash()].join("\n")}async hexBodyHash(){let W=this.headers.get("X-Amz-Content-Sha256")||(this.service==="s3"&&this.signQuery?"UNSIGNED-PAYLOAD":null);if(W==null){if(this.body&&typeof this.body!=="string"&&!("byteLength"in this.body))throw new Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");W=P(await b(this.body||""))}return W}}var m=(W,X)=>{const $=X.parseFromString(W,"text/xml"),D=$.getElementsByTagName("ListBucketResult")[0],J=$.getElementsByTagName("Contents"),Y=$.getElementsByTagName("CommonPrefixes")[0];if(D===null||J===null)throw new Error("Invalid XML");return{$metadata:{},IsTruncated:D.getElementsByTagName("IsTruncated")[0]?.textContent==="true",Contents:Array.from(J).map((Z)=>({ChecksumAlgorithm:[Z.getElementsByTagName("ChecksumAlgorithm")[0]?.textContent],ETag:Z.getElementsByTagName("ETag")[0]?.textContent,Key:Z.getElementsByTagName("Key")[0]?.textContent,LastModified:new Date(Z.getElementsByTagName("LastModified")[0]?.textContent),Owner:{DisplayName:Z.getElementsByTagName("DisplayName")[0]?.textContent,ID:Z.getElementsByTagName("ID")[0]?.textContent},Size:Number.parseInt(Z.getElementsByTagName("Size")[0]?.textContent),StorageClass:Z.getElementsByTagName("StorageClass")[0]?.textContent})),Name:$.getElementsByTagName("Name")[0]?.textContent,Prefix:$.getElementsByTagName("Prefix")[0]?.textContent,Delimiter:$.getElementsByTagName("Delimiter")[0]?.textContent,MaxKeys:Number.parseInt($.getElementsByTagName("MaxKeys")[0]?.textContent),CommonPrefixes:Array.from(Y?Y.getElementsByTagName("Prefix"):[],(Z)=>({Prefix:Z?.textContent})),EncodingType:$.getElementsByTagName("EncodingType")[0]?.textContent,KeyCount:Number.parseInt($.getElementsByTagName("KeyCount")[0]?.textContent),ContinuationToken:$.getElementsByTagName("ContinuationToken")[0]?.textContent,NextContinuationToken:$.getElementsByTagName("NextContinuationToken")[0]?.textContent,StartAfter:$.getElementsByTagName("StartAfter")[0]?.textContent}};class A{client;endpoint;parser;constructor(W,X,$){this.client=W,this.endpoint=X,this.parser=$}async listObjectV2(W){const X=`${this.endpoint}/${W.Bucket}/?list-type=2&prefix=${W.Prefix}`,D=await(await this.client(X,{})).text();return m(D,this.parser)}async putObject(W){const X=`${this.endpoint}/${W.Bucket}/${W.Key}`,$=await this.client(X,{method:"PUT",body:W.Body,headers:{"Content-Type":"application/json",...W.ChecksumSHA256&&{"x-amz-content-sha256":W.ChecksumSHA256}}});if($.status!=200)throw new Error(`Failed to PUT: ${await $.text()}`);return{$metadata:{httpStatusCode:$.status},ETag:$.headers.get("ETag"),...$.headers.get("x-amz-version-id")&&{VersionId:$.headers.get("x-amz-version-id")}}}async deleteObject(W){const X=`${this.endpoint}/${W.Bucket}/${W.Key}`;return{$metadata:{httpStatusCode:(await this.client(X,{method:"DELETE"})).status}}}async getObject(W){const X=`${this.endpoint}/${W.Bucket}/${W.Key}?${W.VersionId?`versionId=${W.VersionId}`:""}`,$=await this.client(X,{method:"GET",headers:{"If-None-Match":W.IfNoneMatch}});if($.status==304){const J=new Error;throw J.name="304",J}let D;if($.status==404)D=void 0;else if($.status==403)throw new Error("Access denied");else if($.headers.get("content-type")==="application/json")D=await $.json();else{const J=await $.text();if(J==="")D=void 0;else try{D=JSON.parse(J)}catch(Y){throw new Error(J)}}return{$metadata:{httpStatusCode:$.status},Body:D,ETag:$.headers.get("ETag"),...$.headers.get("x-amz-version-id")&&{VersionId:$.headers.get("x-amz-version-id")}}}}class O{key;_vals;_keys;constructor(W,X){if(this.key=W,this._vals=new Map,this._keys=new Map,X)for(let[$,D]of X)this.set($,D)}get size(){return this._vals.size}set(W,X){const $=this.key(W);return this._vals.set($,X),this._keys.set($,W),this}get(W){return this._vals.get(this.key(W))}delete(W){const X=this.key(W);return this._keys.delete(X),this._vals.delete(X)}has(W){return this._vals.has(this.key(W))}values(){return this._vals.values()}keys(){return this._keys.values()}forEach(W){return this._vals.forEach((X,$,D)=>W(X,this._keys.get($)))}}var w=()=>`${Date.now()-200}`.padStart(14,"0"),y=()=>`${Date.now()+200}`.padStart(14,"0");var C=()=>crypto.randomUUID();var q=(W)=>`${W.bucket}/${W.key}`;var L=p(),F0=i(),q0=t();var H={previous:".",files:{},update:{}};class s{ref;handler;lastVersion;queue=Promise.resolve();constructor(W,X){this.ref=W,this.handler=X}notify(W,X,$){this.queue=this.queue.then(()=>$).then((D)=>{if(X===this.lastVersion)return;else console.log(`${W} NOTIFY ${q(this.ref)} ${X}`),this.lastVersion=X,this.handler(D)})}}class T{service;ref;subscribers=new Set;poller;cache;pollInProgress=!1;authoritative_key="";authoritative_state=JSON.parse(JSON.stringify(H));optimistic_state=JSON.parse(JSON.stringify(H));pendingWrites=new Map;writtenOperations=new Map;constructor(W,X,$){console.log("New manifest",X),this.service=W,this.ref=X}observeVersionId(W){if(this.writtenOperations.has(W)){const X=this.writtenOperations.get(W);this.pendingWrites.delete(X),this.writtenOperations.delete(W)}}async get(){return this.getLatest().then((W)=>W||this.cache?.data)}async getLatest(){try{const W=await this.service._getObject({operation:"POLL_TIME",ref:this.ref,ifNoneMatch:this.cache?.etag});if(W.$metadata.httpStatusCode===304)return;if(W.data===void 0)this.authoritative_key=".";else this.authoritative_key=W.data;const X=await this.service.s3ClientLite.listObjectV2({Bucket:this.ref.bucket,Prefix:this.ref.key,StartAfter:this.authoritative_key});if(X.Contents===void 0)return this.authoritative_state=JSON.parse(JSON.stringify(H)),this.optimistic_state=JSON.parse(JSON.stringify(H)),this.authoritative_state;for(let $=X.Contents.length-1;$>=0;$--){const D=X.Contents[$].Key;if(D==this.ref.key)continue;const J=w(),Y=await this.service._getObject({operation:"LOOK_BACK",ref:{bucket:this.ref.bucket,key:D}});if(Y.data===void 0)throw new Error("empty data");if(Y.data.previous<J){this.authoritative_key=Y.data.previous,this.authoritative_state=Y.data;break}}for(let $=0;$<X.Contents.length;$++){const D=X.Contents[$].Key;if(D==this.ref.key)continue;const J=await this.service._getObject({operation:"SWEEP",ref:{bucket:this.ref.bucket,key:D}}),Y=D.substring(D.lastIndexOf("@")+1),Z=w();if(D<this.authoritative_key);else if(Y>=Z)this.optimistic_state=L(this.optimistic_state,J.data?.update);else this.authoritative_state=L(this.authoritative_state,J.data?.update),this.authoritative_key=D;this.observeVersionId(Y)}return this.authoritative_state}catch(W){if(W.name==="NoSuchKey")return this.authoritative_state=H,this.authoritative_state;else throw W}}async poll(){if(this.pollInProgress)return;if(this.pollInProgress=!0,this.subscriberCount===0&&this.poller)clearInterval(this.poller),this.poller=void 0;if(this.subscriberCount>0&&!this.poller)this.poller=setInterval(()=>this.poll(),this.service.config.pollFrequency);const W=await this.getLatest();if(W===void 0){this.pollInProgress=!1;return}this.subscribers.forEach(async(X)=>{const $=W.files[q(X.ref)];if($){const D=this.service._getObject({operation:"GET_CONTENT",ref:X.ref,version:$.version});X.notify(this.service.config.label,$.version,D.then((J)=>J.data))}else if($===null)X.notify(this.service.config.label,void 0,Promise.resolve(void 0))}),this.pollInProgress=!1}async updateContent(W,X){this.pendingWrites.set(X,W);try{const $=await X,D=await this.get();D.previous=this.authoritative_key,D.update={files:{}};for(let[B,Q]of $){const F=q(B);if(Q){const z={version:Q};D.update.files[F]=z}else D.update.files[F]=null}const J=y()+"_"+C().substring(0,2),Y=this.ref.key+"@"+J;await this.service._putObject({operation:"PUT_MANIFEST",ref:{key:Y,bucket:this.ref.bucket},value:D});const Z=await this.service._putObject({operation:"PUT_POLL",ref:{key:this.ref.key,bucket:this.ref.bucket},value:this.authoritative_key});return this.writtenOperations.set(J,X),this.poll(),Z}catch($){throw console.error($),this.pendingWrites.delete(X),$}}async getOptimisticVersion(W){return await this.get(),this.optimistic_state.files[q(W)]?.version}subscribe(W,X){console.log(`SUBSCRIBE ${q(W)} ${this.subscriberCount+1}`);const $=new s(W,X);return this.subscribers.add($),()=>this.subscribers.delete($)}get subscriberCount(){return this.subscribers.size}}async function a(W){const X=(new TextEncoder()).encode(W),$=await crypto.subtle.digest("SHA-256",X);return[...new Uint8Array($)].map((D)=>D.toString(16).padStart(2,"0")).join("")}class z0{config;s3ClientLite;manifests=new O(q);getCache=new O((W)=>`${W.Bucket}${W.Key}${W.VersionId}${W.IfNoneMatch}`);constructor(W){if(this.config={...W,label:W.label||C().substring(0,3),useChecksum:W.useChecksum===!1?!1:!0,useVersioning:W.useVersioning||!1,pollFrequency:W.pollFrequency||1000,defaultManifest:{bucket:W.defaultManifest?.bucket||W.defaultBucket,key:typeof W.defaultManifest=="string"?W.defaultManifest:W.defaultManifest?.key||"manifest.json"}},this.config.s3Config?.credentials instanceof Function)throw Error("We can't do that yet");const X=W.s3Config.endpoint||`https://s3.${W.s3Config.region}.amazonaws.com`;let $;if(this.config.s3Config?.credentials){const D=new E({accessKeyId:this.config.s3Config.credentials.accessKeyId,secretAccessKey:this.config.s3Config.credentials.secretAccessKey,sessionToken:this.config.s3Config.credentials.sessionToken,service:"s3",retries:0});$=(...J)=>D.fetch(...J)}else $=(global||window).fetch.bind(global||window);this.s3ClientLite=new A($,X,W.parser||new DOMParser)}getOrCreateManifest(W){if(!this.manifests.has(W))this.manifests.set(W,new T(this,W));return this.manifests.get(W)}async get(W,X={}){const $={...this.config.defaultManifest,...X.manifest},D=this.getOrCreateManifest($),J={bucket:W.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof W==="string"?W:W.key};let Y=!1,Z=void 0;for(let[Q,F]of D.pendingWrites)if(F.has(J))Y=!0,Z=F.get(J);if(Y)return console.log(`${this.config.label} get (cached) ${q(J)}`),Z;const B=await D.getOptimisticVersion(J);if(B===void 0)return;return(await this._getObject({operation:"GET",ref:J,version:B})).data}async _getObject(W){let X;if(this.config.useVersioning)X={Bucket:W.ref.bucket,Key:W.ref.key,IfNoneMatch:W.ifNoneMatch,...W.version&&{VersionId:W.version}};else X={Bucket:W.ref.bucket,Key:`${W.ref.key}${W.version?`@${W.version}`:""}`,IfNoneMatch:W.ifNoneMatch};if(this.getCache.has(X))return await this.getCache.get(X);const $=this.s3ClientLite.getObject(X).then(async(D)=>{const J={...D,data:D.Body};return console.log(`${this.config.label} ${W.operation} ${W.ref.bucket}/${W.ref.key}@${W.version} => ${J.VersionId} ${J.data}}`),this.getCache.set(X,$),J}).catch((D)=>{if(D?.name==="304")return{$metadata:{httpStatusCode:304},data:void 0};else throw D});return $}async delete(W,X={}){return this.putAll(new Map([[W,void 0]]),X)}async put(W,X,$={}){return this.putAll(new Map([[W,X]]),$)}async putAll(W,X={}){const $=new O(q,[...W].map(([J,Y])=>[{bucket:J.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof J==="string"?J:J.key},Y])),D=(X?.manifests||[this.config.defaultManifest]).map((J)=>({...this.config.defaultManifest,...J}));return this._putAll($,{manifests:D})}async _putAll(W,X){const $=new Promise(async(D,J)=>{const Y=new Map,Z=[];W.forEach((B,Q)=>{if(B!==void 0){let F=this.config.useVersioning?void 0:C();Z.push(this._putObject({operation:"PUT_CONTENT",ref:Q,value:B,version:F}).then((z)=>{if(this.config.useVersioning)if(z.VersionId===void 0)throw console.error(z),Error(`Bucket ${Q.bucket} is not version enabled!`);else F=z.VersionId;Y.set(Q,F)}))}else Z.push(this._deleteObject({ref:Q}).then((F)=>{Y.set(Q,void 0)}))}),await Promise.all(Z).catch(J),D(Y)});return Promise.all(X.manifests.map((D)=>{return this.getOrCreateManifest(D).updateContent(W,$)}))}async _putObject(W){const X=JSON.stringify(W.value,null,2);let $;if(this.config.useVersioning)$={Bucket:W.ref.bucket,Key:W.ref.key,ContentType:"application/json",Body:X,...this.config.useChecksum&&{ChecksumSHA256:await a(X)}};else $={Bucket:W.ref.bucket,Key:`${W.ref.key}${W.version?`@${W.version}`:""}`,ContentType:"application/json",Body:X,...this.config.useChecksum&&{ChecksumSHA256:await a(X)}};const D=await this.s3ClientLite.putObject($);return console.log(`${this.config.label} ${W.operation} ${$.Bucket}/${$.Key} => ${D.VersionId}`),D}async _deleteObject(W){const X={Bucket:W.ref.bucket,Key:W.ref.key},$=await this.s3ClientLite.deleteObject(X);return console.log(`${this.config.label} DELETE ${W.ref.bucket}/${W.ref.key} => ${$.VersionId}`),$}subscribe(W,X,$){const D={...this.config.defaultManifest,...$?.manifest},J={key:typeof W==="string"?W:W.key,bucket:W.bucket||this.config.defaultBucket||D.bucket},Y=this.getOrCreateManifest(D),Z=Y.subscribe(J,X);return this.get(J,{manifest:D}).then((B)=>{console.log(`${this.config.label} NOTIFY (initial) ${q(J)}`),queueMicrotask(()=>{X(B),Y.poll()})}),Z}refresh(){return Promise.all([...this.manifests.values()].map((W)=>W.poll()))}get subscriberCount(){return[...this.manifests.values()].reduce((W,X)=>W+X.subscriberCount,0)}}export{z0 as MPS3};
