async function A(z,J){const $=await crypto.subtle.importKey("raw",typeof z==="string"?b.encode(z):z,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return crypto.subtle.sign("HMAC",$,b.encode(J))}async function a(z){return crypto.subtle.digest("SHA-256",typeof z==="string"?b.encode(z):z)}var S=function(z){return Array.prototype.map.call(new Uint8Array(z),(J)=>("0"+J.toString(16)).slice(-2)).join("")},o=function(z){return z.replace(/[!'()*]/g,(J)=>"%"+J.charCodeAt(0).toString(16).toUpperCase())},Pz=function(z,J){const{hostname:$,pathname:W}=z;if($.endsWith(".r2.cloudflarestorage.com"))return["s3","auto"];if($.endsWith(".backblazeb2.com")){const D=$.match(/^(?:[^.]+\.)?s3\.([^.]+)\.backblazeb2\.com$/);return D!=null?["s3",D[1]]:["",""]}const X=$.replace("dualstack.","").match(/([^.]+)\.(?:([^.]*)\.)?amazonaws\.com(?:\.cn)?$/);let[Z,Q]=(X||["",""]).slice(1,3);if(Q==="us-gov")Q="us-gov-west-1";else if(Q==="s3"||Q==="s3-accelerate")Q="us-east-1",Z="s3";else if(Z==="iot")if($.startsWith("iot."))Z="execute-api";else if($.startsWith("data.jobs.iot."))Z="iot-jobs-data";else Z=W==="/mqtt"?"iotdevicegateway":"iotdata";else if(Z==="autoscaling"){const D=(J.get("X-Amz-Target")||"").split(".")[0];if(D==="AnyScaleFrontendService")Z="application-autoscaling";else if(D==="AnyScaleScalingPlannerFrontendService")Z="autoscaling-plans"}else if(Q==null&&Z.startsWith("s3-"))Q=Z.slice(3).replace(/^fips-|^external-1/,""),Z="s3";else if(Z.endsWith("-fips"))Z=Z.slice(0,-5);else if(Q&&/-\d$/.test(Z)&&!/-\d$/.test(Q))[Z,Q]=[Q,Z];return[Yz[Z]||Z,Q]},b=new TextEncoder,Yz={appstream2:"appstream",cloudhsmv2:"cloudhsm",email:"ses",marketplace:"aws-marketplace",mobile:"AWSMobileHubService",pinpoint:"mobiletargeting",queue:"sqs","git-codecommit":"codecommit","mturk-requester-sandbox":"mturk-requester","personalize-runtime":"personalize"},Oz=new Set(["authorization","content-type","content-length","user-agent","presigned-expires","expect","x-amzn-trace-id","range","connection"]);class v{constructor({accessKeyId:z,secretAccessKey:J,sessionToken:$,service:W,region:X,cache:Z,retries:Q,initRetryMs:D}){if(z==null)throw new TypeError("accessKeyId is a required option");if(J==null)throw new TypeError("secretAccessKey is a required option");this.accessKeyId=z,this.secretAccessKey=J,this.sessionToken=$,this.service=W,this.region=X,this.cache=Z||new Map,this.retries=Q!=null?Q:10,this.initRetryMs=D||50}async sign(z,J){if(z instanceof Request){const{method:X,url:Z,headers:Q,body:D}=z;if(J=Object.assign({method:X,url:Z,headers:Q},J),J.body==null&&Q.has("Content-Type"))J.body=D!=null&&Q.has("X-Amz-Content-Sha256")?D:await z.clone().arrayBuffer();z=Z}const $=new t(Object.assign({url:z},J,this,J&&J.aws)),W=Object.assign({},J,await $.sign());delete W.aws;try{return new Request(W.url.toString(),W)}catch(X){if(X instanceof TypeError)return new Request(W.url.toString(),Object.assign({duplex:"half"},W));throw X}}async fetch(z,J){for(let $=0;$<=this.retries;$++){const W=fetch(await this.sign(z,J));if($===this.retries)return W;const X=await W;if(X.status<500&&X.status!==429)return X;await new Promise((Z)=>setTimeout(Z,Math.random()*this.initRetryMs*Math.pow(2,$)))}throw new Error("An unknown error occurred, ensure retries is not negative")}}class t{constructor({method:z,url:J,headers:$,body:W,accessKeyId:X,secretAccessKey:Z,sessionToken:Q,service:D,region:Y,cache:O,datetime:B,signQuery:U,appendSessionToken:j,allHeaders:M,singleEncode:Dz}){if(J==null)throw new TypeError("url is a required option");if(X==null)throw new TypeError("accessKeyId is a required option");if(Z==null)throw new TypeError("secretAccessKey is a required option");this.method=z||(W?"POST":"GET"),this.url=new URL(J),this.headers=new Headers($||{}),this.body=W,this.accessKeyId=X,this.secretAccessKey=Z,this.sessionToken=Q;let d,l;if(!D||!Y)[d,l]=Pz(this.url,this.headers);if(this.service=D||d||"",this.region=Y||l||"us-east-1",this.cache=O||new Map,this.datetime=B||(new Date()).toISOString().replace(/[:-]|\.\d{3}/g,""),this.signQuery=U,this.appendSessionToken=j||this.service==="iotdevicegateway",this.headers.delete("Host"),this.service==="s3"&&!this.signQuery&&!this.headers.has("X-Amz-Content-Sha256"))this.headers.set("X-Amz-Content-Sha256","UNSIGNED-PAYLOAD");const V=this.signQuery?this.url.searchParams:this.headers;if(V.set("X-Amz-Date",this.datetime),this.sessionToken&&!this.appendSessionToken)V.set("X-Amz-Security-Token",this.sessionToken);if(this.signableHeaders=["host",...this.headers.keys()].filter((P)=>M||!Oz.has(P)).sort(),this.signedHeaders=this.signableHeaders.join(";"),this.canonicalHeaders=this.signableHeaders.map((P)=>P+":"+(P==="host"?this.url.host:(this.headers.get(P)||"").replace(/\s+/g," "))).join("\n"),this.credentialString=[this.datetime.slice(0,8),this.region,this.service,"aws4_request"].join("/"),this.signQuery){if(this.service==="s3"&&!V.has("X-Amz-Expires"))V.set("X-Amz-Expires","86400");V.set("X-Amz-Algorithm","AWS4-HMAC-SHA256"),V.set("X-Amz-Credential",this.accessKeyId+"/"+this.credentialString),V.set("X-Amz-SignedHeaders",this.signedHeaders)}if(this.service==="s3")try{this.encodedPath=decodeURIComponent(this.url.pathname.replace(/\+/g," "))}catch(P){this.encodedPath=this.url.pathname}else this.encodedPath=this.url.pathname.replace(/\/+/g,"/");if(!Dz)this.encodedPath=encodeURIComponent(this.encodedPath).replace(/%2F/g,"/");this.encodedPath=o(this.encodedPath);const c=new Set;this.encodedSearch=[...this.url.searchParams].filter(([P])=>{if(!P)return!1;if(this.service==="s3"){if(c.has(P))return!1;c.add(P)}return!0}).map((P)=>P.map((K)=>o(encodeURIComponent(K)))).sort(([P,K],[i,n])=>P<i?-1:P>i?1:K<n?-1:K>n?1:0).map((P)=>P.join("=")).join("&")}async sign(){if(this.signQuery){if(this.url.searchParams.set("X-Amz-Signature",await this.signature()),this.sessionToken&&this.appendSessionToken)this.url.searchParams.set("X-Amz-Security-Token",this.sessionToken)}else this.headers.set("Authorization",await this.authHeader());return{method:this.method,url:this.url,headers:this.headers,body:this.body}}async authHeader(){return["AWS4-HMAC-SHA256 Credential="+this.accessKeyId+"/"+this.credentialString,"SignedHeaders="+this.signedHeaders,"Signature="+await this.signature()].join(", ")}async signature(){const z=this.datetime.slice(0,8),J=[this.secretAccessKey,z,this.region,this.service].join();let $=this.cache.get(J);if(!$){const W=await A("AWS4"+this.secretAccessKey,z),X=await A(W,this.region),Z=await A(X,this.service);$=await A(Z,"aws4_request"),this.cache.set(J,$)}return S(await A($,await this.stringToSign()))}async stringToSign(){return["AWS4-HMAC-SHA256",this.datetime,this.credentialString,S(await a(await this.canonicalString()))].join("\n")}async canonicalString(){return[this.method.toUpperCase(),this.encodedPath,this.encodedSearch,this.canonicalHeaders+"\n",this.signedHeaders,await this.hexBodyHash()].join("\n")}async hexBodyHash(){let z=this.headers.get("X-Amz-Content-Sha256")||(this.service==="s3"&&this.signQuery?"UNSIGNED-PAYLOAD":null);if(z==null){if(this.body&&typeof this.body!=="string"&&!("byteLength"in this.body))throw new Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");z=S(await a(this.body||""))}return z}}var r=(z,J)=>{const $=J.parseFromString(z,"text/xml"),W=$.getElementsByTagName("Contents");if(!W)throw new Error(`Invalid XML: ${z}`);const X=(Z,Q)=>Z.getElementsByTagName(Q)[0]?.textContent;return{$metadata:{},Contents:Array.from(W).map((Z)=>({ETag:X(Z,"ETag"),Key:X(Z,"Key")})),KeyCount:parseInt(X($,"KeyCount")),ContinuationToken:X($,"ContinuationToken"),NextContinuationToken:X($,"NextContinuationToken"),StartAfter:X($,"StartAfter")}};var w=async(z,{retries:J=Number.MAX_VALUE,delay:$=100,max_delay:W=1e4}={})=>{try{return await z()}catch(X){if(J>0)return await new Promise((Z)=>setTimeout(Z,$)),w(z,{retries:J-1,max_delay:W,delay:Math.min($*1.5,W)});throw X}};class g{z;J;$;constructor(z,J,$){this.fetch=z;this.endpoint=J;this.parser=$}getUrl(z,J,$){return`${this.endpoint}/${z}${J?`/${J}`:""}${$||""}`}async listObjectV2(z){for(let J=0;J<10;J++){const $=this.getUrl(z.Bucket,void 0,`/?list-type=2&prefix=${z.Prefix}`),W=await w(()=>this.fetch($,{}));if(W.status===200)return r(await W.text(),this.parser);else if(W.status===429)console.warn("listObjectV2: 429, retrying"),await new Promise((X)=>setTimeout(X,1000));else throw new Error(`Unexpected response: ${W.status} ${await W.text()}`)}throw new Error("Cannot contact server")}async putObject({Bucket:z,Key:J,Body:$,ChecksumSHA256:W}){const X=this.getUrl(z,J),Z=await w(()=>this.fetch(X,{method:"PUT",body:$,headers:{"Content-Type":"application/json",...W&&{"x-amz-content-sha256":W}}}));if(Z.status!==200)throw new Error(`Failed to PUT: ${await Z.text()}`);return{$metadata:{httpStatusCode:Z.status},ETag:Z.headers.get("ETag"),...Z.headers.get("x-amz-version-id")&&{VersionId:Z.headers.get("x-amz-version-id")}}}async deleteObject({Bucket:z,Key:J}){return{$metadata:{httpStatusCode:(await w(()=>this.fetch(this.getUrl(z,J),{method:"DELETE"}))).status}}}async getObject({Bucket:z,Key:J,VersionId:$,IfNoneMatch:W}){const X=this.getUrl(z,J,$?`?versionId=${$}`:""),Z=await w(()=>this.fetch(X,{method:"GET",headers:{"If-None-Match":W}}));switch(Z.status){case 304:throw new Error("304");case 404:return{$metadata:{httpStatusCode:404}};case 403:throw new Error("Access denied");default:{let Q;const D=Z.headers.get("content-type"),Y=await Z.text();if(D==="application/json"||Y&&Y!=="")try{Q=JSON.parse(Y)}catch(O){throw new Error(`Failed to parse response as JSON ${X}`)}return{$metadata:{httpStatusCode:Z.status},Body:Q,ETag:Z.headers.get("ETag"),...Z.headers.get("x-amz-version-id")&&{VersionId:Z.headers.get("x-amz-version-id")}}}}}}class G{key;_vals;_keys;constructor(z,J){if(this.key=z,this._vals=new Map,this._keys=new Map,J)for(let[$,W]of J)this.set($,W)}get size(){return this._vals.size}set(z,J){const $=this.key(z);return this._vals.set($,J),this._keys.set($,z),this}get(z){return this._vals.get(this.key(z))}delete(z){const J=this.key(z);return this._keys.delete(J),this._vals.delete(J)}has(z){return this._vals.has(this.key(z))}values(){return this._vals.values()}keys(){return this._keys.values()}forEach(z){return this._vals.forEach((J,$,W)=>z(J,this._keys.get($)))}}var s=()=>`${Date.now()-200}`.padStart(14,"0"),e=()=>`${Date.now()+200}`.padStart(14,"0");var L=async(z)=>{const J=Date.now(),$=await z,W=Date.now();return[$,W-J]};var _=()=>crypto.randomUUID();var C=(z)=>`${z.bucket}/${z.key}`;var q=(z)=>JSON.parse(JSON.stringify(z));var H=function(z){return new Promise((J,$)=>{z.oncomplete=z.onsuccess=()=>J(z.result),z.onabort=z.onerror=()=>$(z.error)})},N=function(z,J){const $=indexedDB.open(z);$.onupgradeneeded=()=>$.result.createObjectStore(J);const W=H($);return(X,Z)=>W.then((Q)=>Z(Q.transaction(J,X).objectStore(J)))},T=function(){if(!p)p=N("keyval-store","keyval");return p},E=function(z,J=T()){return J("readonly",($)=>H($.get(z)))},F=function(z,J,$=T()){return $("readwrite",(W)=>{return W.put(J,z),H(W.transaction)})};var zz=function(z,J=T()){return J("readonly",($)=>Promise.all(z.map((W)=>H($.get(W)))))};var Jz=function(z,J=T()){return J("readwrite",($)=>{return $.delete(z),H($.transaction)})},R=function(z,J=T()){return J("readwrite",($)=>{return z.forEach((W)=>$.delete(W)),H($.transaction)})};var Bz=function(z,J){return z.openCursor().onsuccess=function(){if(!this.result)return;J(this.result),this.result.continue()},H(z.transaction)},h=function(z=T()){return z("readonly",(J)=>{if(J.getAllKeys)return H(J.getAllKeys());const $=[];return Bz(J,(W)=>$.push(W.key)).then(()=>$)})};var p;var Cz=6,$z=(z)=>`write-${z.toString().padStart(Cz,"0")}`;class m{session=_();proposedOperations=new Map;operationLabels=new Map;db;lastIndex=0;load=void 0;constructor(z){this.db=z}async propose(z,J,$=!1){if(this.proposedOperations.set(z,J),this.db){if(this.load&&!$)await this.load,this.proposedOperations.delete(z),this.proposedOperations.set(z,J);this.lastIndex++;const W=$z(this.lastIndex);z[this.session]=this.lastIndex,await F(W,[...J.entries()].map(([X,Z])=>[JSON.stringify(X),Z]),this.db),console.log(`STORE ${W} ${JSON.stringify([...J.entries()])}`)}}async label(z,J,$=!1){if(this.operationLabels.set(J,z),this.db){if(this.load&&!$)await this.load;const W=z[this.session];if(W===void 0)throw new Error("Cannot label an unproposed operation");const X=`label-${W}`;await F(X,J,this.db),console.log(`STORE ${X} ${J}`)}}async confirm(z,J=!1){if(this.operationLabels.has(z)){const $=this.operationLabels.get(z);if(this.proposedOperations.delete($),this.operationLabels.delete(z),this.db){if(this.load&&!J)await this.load;const W=$[this.session],X=[$z(W),`label-${W}`];await R(X,this.db),console.log(`DEL ${X}`)}}}async cancel(z,J=!1){if(this.operationLabels.forEach(($,W)=>{if($===z)this.operationLabels.delete(W)}),this.proposedOperations.delete(z),this.db){if(this.load&&!J)await this.load;const $=z[this.session];await R([`write-${$}`,`label-${$}`],this.db)}}async flatten(){if(this.load)await this.load;const z=new G(C);return this.proposedOperations.forEach((J)=>{J.forEach(($,W)=>{z.set(W,$)})}),z}async restore(z,J){return this.db=z,this.proposedOperations.clear(),this.operationLabels.clear(),this.lastIndex=0,this.load=new Promise(async($)=>{const X=(await h(this.db)).filter((Q)=>Q.startsWith("write-")).sort();console.log("RESTORE",X);const Z=await zz(X,this.db);for(let Q=0;Q<X.length;Q++){const D=parseInt(X[Q].split("-")[1]);this.lastIndex=Math.max(this.lastIndex,D)}for(let Q=0;Q<X.length;Q++){const D=X[Q],Y=parseInt(D.split("-")[1]),O=Z[Q].map(([j,M])=>[JSON.parse(j),M]),B=await E(`label-${Y}`,this.db);if(!O)continue;const U=new Map(O);await J(U,B),await R([`write-${Y}`,`label-${Y}`],this.db)}$(void 0)}),this.load}}function x(z,J){if(Array.isArray(J)||typeof J!=="object"||J===null)return J;if(typeof z!=="object"||z===null)z={};for(let $ in J)if(J[$]===null)delete z[$];else z[$]=x(z[$],J[$]);return z}var f="manifest",I={previous:".",files:{},update:{}};class y{z;authoritative_key="";authoritative_state=q(I);optimistic_state=q(I);loading;cache;db;constructor(z){this.manifest=z}async restore(z){this.db=z,this.loading=E(f,z).then((J)=>{if(J)this.authoritative_state=J,this.optimistic_state=J,this.manifest.service.config.log(`RESTORE ${f}`)})}async getLatest(){if(this.loading)await this.loading;if(this.loading=void 0,!this.manifest.service.config.online)return this.authoritative_state;try{const z=await this.manifest.service._getObject({operation:"POLL_TIME",ref:this.manifest.ref,ifNoneMatch:this.cache?.etag,useCache:!1});if(z.$metadata.httpStatusCode===304)return this.authoritative_state;if(z.data===void 0)this.authoritative_key=".";else this.authoritative_key=z.data;const[J,$]=await L(this.manifest.service.s3ClientLite.listObjectV2({Bucket:this.manifest.ref.bucket,Prefix:this.manifest.ref.key,StartAfter:this.authoritative_key}));if(this.manifest.service.config.log(`${$}ms LIST ${this.manifest.ref.bucket}/${this.manifest.ref.key}`),J.Contents===void 0)return this.authoritative_state=q(I),this.optimistic_state=q(I),this.authoritative_state;const W=`${this.manifest.ref.key}@${s()}`;for(let X=J.Contents.length-1;X>=0;X--){const Z=J.Contents[X].Key;if(Z==this.manifest.ref.key)continue;const Q={bucket:this.manifest.ref.bucket,key:Z},D=await this.manifest.service._getObject({operation:"LOOK_BACK",ref:Q});if(D.data===void 0){await this.manifest.service._deleteObject({operation:"CLEANUP",ref:Q});continue}if(D.data.previous<W){this.authoritative_key=D.data.previous,this.authoritative_state=D.data;break}}for(let X=0;X<J.Contents.length;X++){const Z=J.Contents[X].Key;if(Z==this.manifest.ref.key)continue;if(Z<this.authoritative_key)continue;const Q=await this.manifest.service._getObject({operation:"SWEEP",ref:{bucket:this.manifest.ref.bucket,key:Z}}),D=Z.substring(Z.lastIndexOf("@")+1);if(D>=W)this.manifest.service.config.log("Optimistic update"),this.optimistic_state=x(this.optimistic_state,Q.data?.update);else this.authoritative_state=x(this.authoritative_state,Q.data?.update),this.optimistic_state=x(this.optimistic_state,Q.data?.update),this.authoritative_key=Z;this.manifest.observeVersionId(D)}if(this.db)F(f,this.authoritative_state,this.db);return this.authoritative_state}catch(z){if(z.name==="NoSuchKey")return this.authoritative_state=I,this.authoritative_state;else throw z}}}class Wz{z;J;$;queue=Promise.resolve();constructor(z,J,$){this.ref=z;this.handler=J;this.lastVersion=$}notify(z,J,$){this.queue=this.queue.then(()=>$).then((W)=>{if(J!==this.lastVersion)z.config.log(`${z.config.label} NOTIFY ${C(this.ref)} ${J}`),this.lastVersion=J,this.handler(W)})}}class u{z;J;subscribers=new Set;poller;pollInProgress=!1;manifestState=new y(this);operationQueue=new m;constructor(z,J){this.service=z;this.ref=J;console.log("Create manifest",C(J))}load(z){this.manifestState.restore(z),this.operationQueue.restore(z,async(J,$)=>{if(!$)await this.service._putAll(J,{manifests:[this.ref],await:"local",isLoad:!0});else await this.updateContent(J,Promise.resolve(new Map([[this.ref,$]])),{await:"local",isLoad:!0})})}observeVersionId(z){this.operationQueue.confirm(z)}async poll(){if(this.pollInProgress)return;if(this.pollInProgress=!0,this.subscriberCount===0&&this.poller)clearInterval(this.poller),this.poller=void 0;if(this.subscriberCount>0&&!this.poller)this.poller=setInterval(()=>this.poll(),this.service.config.pollFrequency);const z=await this.manifestState.getLatest();if(z===void 0){this.pollInProgress=!1;return}const J=await this.operationQueue.flatten();this.subscribers.forEach(async($)=>{if(J.has($.ref))$.notify(this.service,"local",Promise.resolve(J.get($.ref)));else{const W=z.files[C($.ref)];if(W){const X=this.service._getObject({operation:"GET_CONTENT",ref:$.ref,version:W.version});$.notify(this.service,W.version,X.then((Z)=>Z.data))}else if(W===null)$.notify(this.service,void 0,Promise.resolve(void 0))}}),this.pollInProgress=!1}updateContent(z,J,$){const W=this.operationQueue.propose(J,z,$.isLoad),X=W.then(async()=>{try{const Z=await J,Q=await this.manifestState.getLatest();Q.previous=this.manifestState.authoritative_key,Q.update={files:{}};for(let[B,U]of Z){const j=C(B);if(U){const M={version:U};Q.update.files[j]=M}else Q.update.files[j]=null}const D=e()+"_"+_().substring(0,2),Y=this.ref.key+"@"+D;this.operationQueue.label(J,D,$.isLoad),await this.service._putObject({operation:"PUT_MANIFEST",ref:{key:Y,bucket:this.ref.bucket},value:Q});const O=await this.service._putObject({operation:"PUT_POLL",ref:{key:this.ref.key,bucket:this.ref.bucket},value:this.manifestState.authoritative_key});return this.poll(),O}catch(Z){throw console.error(Z),this.operationQueue.cancel(J,$.isLoad),Z}});if($.await==="local")return W;else return X}async getOptimisticVersion(z){return await this.manifestState.getLatest(),this.manifestState.optimistic_state.files[C(z)]?.version}subscribe(z,J){this.service.config.log(`SUBSCRIBE ${C(z)} ${this.subscriberCount+1}`);const $=new Wz(z,J);return this.subscribers.add($),()=>this.subscribers.delete($)}get subscriberCount(){return this.subscribers.size}}var Xz=async(z,J)=>{const $=new URL(z),W=new URLSearchParams($.search),X=$.pathname.split("/"),Z=X[1],Q=X.slice(2).join("/"),D=N(Z,"v0");let Y,O=200;if(W.get("list-type")){const B=W.get("prefix")||"";Y=`<ListBucketResult>${(await h(D)).filter((j)=>`${j}`.startsWith(B)).map((j)=>`<Contents><Key>${j}</Key></Contents>`)}</ListBucketResult>`}else if(J?.method==="GET")Y=await E(Q,D),O=Y===void 0?404:200;else if(J?.method==="PUT")Y=await J.body,await F(Q,Y,D);else if(J?.method==="DELETE")await Jz(Q,D);else throw new Error;return new Response(Y,{status:O})};async function Zz(z){const J=(new TextEncoder()).encode(z),$=await crypto.subtle.digest("SHA-256",J);return[...new Uint8Array($)].map((W)=>W.toString(16).padStart(2,"0")).join("")}class Qz{static LOCAL_ENDPOINT="indexdb://";config;s3ClientLite;manifests=new G(C);memCache=new G((z)=>`${z.Bucket}${z.Key}${z.VersionId}${z.IfNoneMatch}`);diskCache;endpoint;constructor(z){if(this.config={...z,label:z.label||"default",useChecksum:z.useChecksum===!1?!1:!0,online:z.online===!1?!1:!0,offlineStorage:z.offlineStorage===!1?!1:!0,useVersioning:z.useVersioning||!1,pollFrequency:z.pollFrequency||1000,defaultManifest:{bucket:z.defaultManifest?.bucket||z.defaultBucket,key:typeof z.defaultManifest=="string"?z.defaultManifest:z.defaultManifest?.key||"manifest.json"},log:(...$)=>(z.log||console.log)(this.config.label,...$)},this.config.s3Config?.credentials instanceof Function)throw Error("We can't do that yet");this.endpoint=z.s3Config.endpoint||`https://s3.${z.s3Config.region}.amazonaws.com`;let J;if(this.config.s3Config?.credentials){const $=new v({accessKeyId:this.config.s3Config.credentials.accessKeyId,secretAccessKey:this.config.s3Config.credentials.secretAccessKey,sessionToken:this.config.s3Config.credentials.sessionToken,region:this.config.s3Config.region||"us-east-1",service:"s3",retries:0});J=(...W)=>$.fetch(...W)}else if(this.endpoint==Qz.LOCAL_ENDPOINT)J=Xz;else J=(global||window).fetch.bind(global||window);if(this.config.offlineStorage){const $=`mps3-${this.config.label}`;this.diskCache=N($,"v0")}this.s3ClientLite=new g(this.config.online?J:()=>new Promise(()=>{}),this.endpoint,z.parser||new DOMParser)}getOrCreateManifest(z){if(!this.manifests.has(z)){const J=new u(this,z);if(this.manifests.set(z,J),this.config.offlineStorage){const $=`mps3-${this.config.label}-${z.bucket}-${z.key}`,W=N($,"v0");this.config.log(`Restoring manifest from ${$}`),J.load(W)}}return this.manifests.get(z)}async get(z,J={}){const $={...this.config.defaultManifest,...J.manifest},W=this.getOrCreateManifest($),X={bucket:z.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof z==="string"?z:z.key},Z=await W.operationQueue.flatten();if(Z.has(X))return this.config.log(`GET (cached) ${X} ${Z.get(X)}`),Z.get(X);const Q=await W.getOptimisticVersion(X);if(Q===void 0)return;return(await this._getObject({operation:"GET",ref:X,version:Q})).data}async _getObject(z){let J;if(this.config.useVersioning)J={Bucket:z.ref.bucket,Key:z.ref.key,IfNoneMatch:z.ifNoneMatch,...z.version&&{VersionId:z.version}};else J={Bucket:z.ref.bucket,Key:`${z.ref.key}${z.version?`@${z.version}`:""}`,IfNoneMatch:z.ifNoneMatch};const $=`${J.Bucket}${J.Key}${J.VersionId}`;if(z.useCache!==!1){if(this.memCache.has(J))return this.memCache.get(J);if(this.diskCache){const X=await E($,this.diskCache);if(X)return this.config.log(`${z.operation} (disk cached) ${$}`),this.memCache.set(J,Promise.resolve(X)),X}}if(!this.config.online)throw new Error(`${this.config.label} Offline and value not cached for ${$}`);const W=L(this.s3ClientLite.getObject(J)).then(async([X,Z])=>{const Q={$metadata:X.$metadata,ETag:X.ETag,data:X.Body};return this.config.log(`${Z}ms ${z.operation} ${z.ref.bucket}/${z.ref.key}@${z.version} => ${Q.VersionId}`),Q}).catch((X)=>{if(X?.name==="304")return{$metadata:{httpStatusCode:304},data:void 0};else throw X});if(z.useCache!==!1){if(this.memCache.set(J,W),this.diskCache)W.then((X)=>{F(`${J.Bucket}${J.Key}${J.VersionId}`,X,this.diskCache).then(()=>this.config.log(`STORE ${J.Bucket}${J.Key}`))})}return W}async delete(z,J={}){return this.putAll(new Map([[z,void 0]]),J)}async put(z,J,$={}){return this.putAll(new Map([[z,J]]),$)}async putAll(z,J={}){const $=new Map([...z].map(([X,Z])=>[{bucket:X.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof X==="string"?X:X.key},Z])),W=(J?.manifests||[this.config.defaultManifest]).map((X)=>({...this.config.defaultManifest,...X}));return this._putAll($,{manifests:W,await:J.await||this.config.online?"remote":"local"})}async _putAll(z,J){const $=new Map,W=new Promise(async(X,Z)=>{const Q=new Map,D=[];z.forEach((Y,O)=>{if(Y!==void 0){let B=this.config.useVersioning?void 0:_();$.set(O,Y),D.push(this._putObject({operation:"PUT_CONTENT",ref:O,value:Y,version:B}).then((U)=>{if(this.config.useVersioning)if(U.VersionId===void 0)throw console.error(U),Error(`Bucket ${O.bucket} is not version enabled!`);else B=U.VersionId;Q.set(O,B)}))}else D.push(this._deleteObject({ref:O}).then((B)=>{Q.set(O,void 0)}))}),await Promise.all(D).catch(Z),X(Q)});return Promise.all(J.manifests.map((X)=>{return this.getOrCreateManifest(X).updateContent($,W,{await:J.await,isLoad:J.isLoad===!0})}))}async _putObject(z){const J=JSON.stringify(z.value,null,2);let $;if(this.config.useVersioning)$={Bucket:z.ref.bucket,Key:z.ref.key,ContentType:"application/json",Body:J,...this.config.useChecksum&&{ChecksumSHA256:await Zz(J)}};else $={Bucket:z.ref.bucket,Key:`${z.ref.key}${z.version?`@${z.version}`:""}`,ContentType:"application/json",Body:J,...this.config.useChecksum&&{ChecksumSHA256:await Zz(J)}};const[W,X]=await L(this.s3ClientLite.putObject($));if(this.config.log(`${X}ms ${z.operation} ${$.Bucket}/${$.Key} => ${W.VersionId}`),this.diskCache){const Z=`${$.Bucket}${$.Key}${z.version||W.VersionId}`;await F(Z,{$metadata:{httpStatusCode:200},etag:W.ETag,data:JSON.parse(J)},this.diskCache).then(()=>this.config.log(`STORE ${Z}`))}return W}async _deleteObject(z){const J={Bucket:z.ref.bucket,Key:z.ref.key},[$,W]=await L(this.s3ClientLite.deleteObject(J));return this.config.log(`${W}ms ${z.operation||"DELETE"} ${z.ref.bucket}/${z.ref.key} => ${$.VersionId}`),$}subscribe(z,J,$){const W={...this.config.defaultManifest,...$?.manifest},X={key:typeof z==="string"?z:z.key,bucket:z.bucket||this.config.defaultBucket||W.bucket},Z=this.getOrCreateManifest(W),Q=Z.subscribe(X,J);return this.get(X,{manifest:W}).then((D)=>{this.config.log(`NOTIFY (initial) ${C(X)}`),queueMicrotask(()=>{J(D,void 0),Z.poll()})}).catch((D)=>{J(void 0,D)}),Q}refresh(){return Promise.all([...this.manifests.values()].map((z)=>z.poll()))}get subscriberCount(){return[...this.manifests.values()].reduce((z,J)=>z+J.subscriberCount,0)}}export{Qz as MPS3};
