async function x($,z){const W=await crypto.subtle.importKey("raw",typeof $==="string"?k.encode($):$,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return crypto.subtle.sign("HMAC",W,k.encode(z))}async function s($){return crypto.subtle.digest("SHA-256",typeof $==="string"?k.encode($):$)}var v=function($){return Array.prototype.map.call(new Uint8Array($),(z)=>("0"+z.toString(16)).slice(-2)).join("")},e=function($){return $.replace(/[!'()*]/g,(z)=>"%"+z.charCodeAt(0).toString(16).toUpperCase())},H0=function($,z){const{hostname:W,pathname:X}=$;if(W.endsWith(".r2.cloudflarestorage.com"))return["s3","auto"];if(W.endsWith(".backblazeb2.com")){const Q=W.match(/^(?:[^.]+\.)?s3\.([^.]+)\.backblazeb2\.com$/);return Q!=null?["s3",Q[1]]:["",""]}const J=W.replace("dualstack.","").match(/([^.]+)\.(?:([^.]*)\.)?amazonaws\.com(?:\.cn)?$/);let[Z,D]=(J||["",""]).slice(1,3);if(D==="us-gov")D="us-gov-west-1";else if(D==="s3"||D==="s3-accelerate")D="us-east-1",Z="s3";else if(Z==="iot")if(W.startsWith("iot."))Z="execute-api";else if(W.startsWith("data.jobs.iot."))Z="iot-jobs-data";else Z=X==="/mqtt"?"iotdevicegateway":"iotdata";else if(Z==="autoscaling"){const Q=(z.get("X-Amz-Target")||"").split(".")[0];if(Q==="AnyScaleFrontendService")Z="application-autoscaling";else if(Q==="AnyScaleScalingPlannerFrontendService")Z="autoscaling-plans"}else if(D==null&&Z.startsWith("s3-"))D=Z.slice(3).replace(/^fips-|^external-1/,""),Z="s3";else if(Z.endsWith("-fips"))Z=Z.slice(0,-5);else if(D&&/-\d$/.test(Z)&&!/-\d$/.test(D))[Z,D]=[D,Z];return[U0[Z]||Z,D]},k=new TextEncoder,U0={appstream2:"appstream",cloudhsmv2:"cloudhsm",email:"ses",marketplace:"aws-marketplace",mobile:"AWSMobileHubService",pinpoint:"mobiletargeting",queue:"sqs","git-codecommit":"codecommit","mturk-requester-sandbox":"mturk-requester","personalize-runtime":"personalize"},F0=new Set(["authorization","content-type","content-length","user-agent","presigned-expires","expect","x-amzn-trace-id","range","connection"]);class g{constructor({accessKeyId:$,secretAccessKey:z,sessionToken:W,service:X,region:J,cache:Z,retries:D,initRetryMs:Q}){if($==null)throw new TypeError("accessKeyId is a required option");if(z==null)throw new TypeError("secretAccessKey is a required option");this.accessKeyId=$,this.secretAccessKey=z,this.sessionToken=W,this.service=X,this.region=J,this.cache=Z||new Map,this.retries=D!=null?D:10,this.initRetryMs=Q||50}async sign($,z){if($ instanceof Request){const{method:J,url:Z,headers:D,body:Q}=$;if(z=Object.assign({method:J,url:Z,headers:D},z),z.body==null&&D.has("Content-Type"))z.body=Q!=null&&D.has("X-Amz-Content-Sha256")?Q:await $.clone().arrayBuffer();$=Z}const W=new $0(Object.assign({url:$},z,this,z&&z.aws)),X=Object.assign({},z,await W.sign());delete X.aws;try{return new Request(X.url.toString(),X)}catch(J){if(J instanceof TypeError)return new Request(X.url.toString(),Object.assign({duplex:"half"},X));throw J}}async fetch($,z){for(let W=0;W<=this.retries;W++){const X=fetch(await this.sign($,z));if(W===this.retries)return X;const J=await X;if(J.status<500&&J.status!==429)return J;await new Promise((Z)=>setTimeout(Z,Math.random()*this.initRetryMs*Math.pow(2,W)))}throw new Error("An unknown error occurred, ensure retries is not negative")}}class $0{constructor({method:$,url:z,headers:W,body:X,accessKeyId:J,secretAccessKey:Z,sessionToken:D,service:Q,region:O,cache:Y,datetime:U,signQuery:F,appendSessionToken:C,allHeaders:B,singleEncode:_}){if(z==null)throw new TypeError("url is a required option");if(J==null)throw new TypeError("accessKeyId is a required option");if(Z==null)throw new TypeError("secretAccessKey is a required option");this.method=$||(X?"POST":"GET"),this.url=new URL(z),this.headers=new Headers(W||{}),this.body=X,this.accessKeyId=J,this.secretAccessKey=Z,this.sessionToken=D;let q,K;if(!Q||!O)[q,K]=H0(this.url,this.headers);if(this.service=Q||q||"",this.region=O||K||"us-east-1",this.cache=Y||new Map,this.datetime=U||(new Date()).toISOString().replace(/[:-]|\.\d{3}/g,""),this.signQuery=F,this.appendSessionToken=C||this.service==="iotdevicegateway",this.headers.delete("Host"),this.service==="s3"&&!this.signQuery&&!this.headers.has("X-Amz-Content-Sha256"))this.headers.set("X-Amz-Content-Sha256","UNSIGNED-PAYLOAD");const G=this.signQuery?this.url.searchParams:this.headers;if(G.set("X-Amz-Date",this.datetime),this.sessionToken&&!this.appendSessionToken)G.set("X-Amz-Security-Token",this.sessionToken);if(this.signableHeaders=["host",...this.headers.keys()].filter((P)=>B||!F0.has(P)).sort(),this.signedHeaders=this.signableHeaders.join(";"),this.canonicalHeaders=this.signableHeaders.map((P)=>P+":"+(P==="host"?this.url.host:(this.headers.get(P)||"").replace(/\s+/g," "))).join("\n"),this.credentialString=[this.datetime.slice(0,8),this.region,this.service,"aws4_request"].join("/"),this.signQuery){if(this.service==="s3"&&!G.has("X-Amz-Expires"))G.set("X-Amz-Expires","86400");G.set("X-Amz-Algorithm","AWS4-HMAC-SHA256"),G.set("X-Amz-Credential",this.accessKeyId+"/"+this.credentialString),G.set("X-Amz-SignedHeaders",this.signedHeaders)}if(this.service==="s3")try{this.encodedPath=decodeURIComponent(this.url.pathname.replace(/\+/g," "))}catch(P){this.encodedPath=this.url.pathname}else this.encodedPath=this.url.pathname.replace(/\/+/g,"/");if(!_)this.encodedPath=encodeURIComponent(this.encodedPath).replace(/%2F/g,"/");this.encodedPath=e(this.encodedPath);const o=new Set;this.encodedSearch=[...this.url.searchParams].filter(([P])=>{if(!P)return!1;if(this.service==="s3"){if(o.has(P))return!1;o.add(P)}return!0}).map((P)=>P.map((R)=>e(encodeURIComponent(R)))).sort(([P,R],[t,r])=>P<t?-1:P>t?1:R<r?-1:R>r?1:0).map((P)=>P.join("=")).join("&")}async sign(){if(this.signQuery){if(this.url.searchParams.set("X-Amz-Signature",await this.signature()),this.sessionToken&&this.appendSessionToken)this.url.searchParams.set("X-Amz-Security-Token",this.sessionToken)}else this.headers.set("Authorization",await this.authHeader());return{method:this.method,url:this.url,headers:this.headers,body:this.body}}async authHeader(){return["AWS4-HMAC-SHA256 Credential="+this.accessKeyId+"/"+this.credentialString,"SignedHeaders="+this.signedHeaders,"Signature="+await this.signature()].join(", ")}async signature(){const $=this.datetime.slice(0,8),z=[this.secretAccessKey,$,this.region,this.service].join();let W=this.cache.get(z);if(!W){const X=await x("AWS4"+this.secretAccessKey,$),J=await x(X,this.region),Z=await x(J,this.service);W=await x(Z,"aws4_request"),this.cache.set(z,W)}return v(await x(W,await this.stringToSign()))}async stringToSign(){return["AWS4-HMAC-SHA256",this.datetime,this.credentialString,v(await s(await this.canonicalString()))].join("\n")}async canonicalString(){return[this.method.toUpperCase(),this.encodedPath,this.encodedSearch,this.canonicalHeaders+"\n",this.signedHeaders,await this.hexBodyHash()].join("\n")}async hexBodyHash(){let $=this.headers.get("X-Amz-Content-Sha256")||(this.service==="s3"&&this.signQuery?"UNSIGNED-PAYLOAD":null);if($==null){if(this.body&&typeof this.body!=="string"&&!("byteLength"in this.body))throw new Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");$=v(await s(this.body||""))}return $}}var N=()=>crypto.randomUUID(),z0=($)=>p($,10);var H=($)=>`${$.bucket}/${$.key}`;var B0=($,z)=>{const W=Math.ceil(z/5);return $.toString(32).padStart(W,"0")};var p=($,z)=>{const W=Math.pow(2,z)-1;return B0(W-$,z)},W0=($,z)=>{const W=Math.pow(2,z)-1,X=parseInt($,32);return W-X};var h=($=0)=>p($,42);var T=async($)=>{const z=Date.now();return[await $,Date.now()-z]},f=($,z)=>{if(z.adaptiveClock)return T($).then(([W,X])=>{if(W.status!==200)return W;const J=W.headers.get("date");if(J){let Z=0;const D=new Date(J).getTime(),Q=Date.now()+z.clockOffset;if(Q<D-X)Z=D-Q-X;else if(Q>D+1000+X)Z=D+1000-Q+X;if(Z>0)z.clockOffset=z.clockOffset+Z;if(Z>0)console.log("latency",X,"error",Z,"local_time",Q,"server_time",D,"config.clockOffset",z.clockOffset)}return W});return $};var X0=($,z)=>{const W=z.parseFromString($,"text/xml");if(!W)throw new Error(`Invalid XML: ${$}`);const X=W.getElementsByTagName("Contents"),J=(Z,D)=>{const Q=Z.getElementsByTagName(D)[0]?.textContent;return Q?decodeURIComponent(Q.replace(/\+/g," ")):void 0};return{$metadata:{},Contents:Array.from(X).map((Z)=>{const D=J(Z,"LastModified");return{ETag:J(Z,"ETag"),Key:J(Z,"Key"),LastModified:D?new Date(D):void 0}}),KeyCount:parseInt(J(W,"KeyCount")),ContinuationToken:J(W,"ContinuationToken"),NextContinuationToken:J(W,"NextContinuationToken"),StartAfter:J(W,"StartAfter")}};var w=async($,{retries:z=Number.MAX_VALUE,delay:W=100,max_delay:X=1e4}={})=>{try{return await $()}catch(J){if(z>0)return await new Promise((Z)=>setTimeout(Z,W)),w($,{retries:z-1,max_delay:X,delay:Math.min(W*1.5,X)});throw J}};class d{$;z;W;constructor($,z,W){this.fetch=$;this.endpoint=z;this.mps3=W}getUrl($,z,W){return`${this.endpoint}/${$}${z?`/${encodeURIComponent(z)}`:""}${W||""}`}async listObjectV2($){for(let z=0;z<10;z++){const W=this.getUrl($.Bucket,void 0,`/?list-type=2&prefix=${$.Prefix}&start-after=${$.StartAfter}`),X=await w(()=>this.fetch(W,{}));if(X.status===200)return X0(await X.text(),this.mps3.config.parser);else if(X.status===429)console.warn("listObjectV2: 429, retrying"),await new Promise((J)=>setTimeout(J,1000));else throw new Error(`Unexpected response: ${X.status} ${await X.text()}`)}throw new Error("Cannot contact server")}async putObject({Bucket:$,Key:z,Body:W,ChecksumSHA256:X}){const J=this.getUrl($,z),Z=await w(()=>f(this.fetch(J,{method:"PUT",body:W,headers:{"Content-Type":"application/json",...X&&{"x-amz-content-sha256":X}}}),this.mps3.config));if(Z.status!==200)throw new Error(`Failed to PUT: ${await Z.text()}`);return{$metadata:{httpStatusCode:Z.status},Date:new Date(Z.headers.get("date")),ETag:Z.headers.get("ETag"),...Z.headers.get("x-amz-version-id")&&{VersionId:Z.headers.get("x-amz-version-id")}}}async deleteObject({Bucket:$,Key:z}){return{$metadata:{httpStatusCode:(await w(()=>this.fetch(this.getUrl($,z),{method:"DELETE"}))).status}}}async getObject({Bucket:$,Key:z,VersionId:W,IfNoneMatch:X}){const J=this.getUrl($,z,W?`?versionId=${W}`:""),Z=await w(()=>f(this.fetch(J,{method:"GET",headers:{"If-None-Match":X}}),this.mps3.config));switch(Z.status){case 304:throw new Error("304");case 404:return{$metadata:{httpStatusCode:404}};case 403:throw new Error("Access denied");default:{let D;const Q=Z.headers.get("content-type"),O=await Z.text();if(Q==="application/json"||O&&O!=="")try{D=JSON.parse(O)}catch(Y){throw new Error(`Failed to parse response as JSON ${J}`)}return{$metadata:{httpStatusCode:Z.status},Body:D,ETag:Z.headers.get("ETag"),...Z.headers.get("x-amz-version-id")&&{VersionId:Z.headers.get("x-amz-version-id")}}}}}}class M{key;_vals;_keys;constructor($,z){if(this.key=$,this._vals=new Map,this._keys=new Map,z)for(let[W,X]of z)this.set(W,X)}get size(){return this._vals.size}set($,z){const W=this.key($);return this._vals.set(W,z),this._keys.set(W,$),this}get($){return this._vals.get(this.key($))}delete($){const z=this.key($);return this._keys.delete(z),this._vals.delete(z)}has($){return this._vals.has(this.key($))}values(){return this._vals.values()}keys(){return this._keys.values()}forEach($){return this._vals.forEach((z,W,X)=>$(z,this._keys.get(W)))}}var E=function($){return new Promise((z,W)=>{$.oncomplete=$.onsuccess=()=>z($.result),$.onabort=$.onerror=()=>W($.error)})},A=function($,z){const W=indexedDB.open($);W.onupgradeneeded=()=>W.result.createObjectStore(z);const X=E(W);return(J,Z)=>X.then((D)=>Z(D.transaction(z,J).objectStore(z)))},I=function(){if(!y)y=A("keyval-store","keyval");return y},V=function($,z=I()){return z("readonly",(W)=>E(W.get($)))},j=function($,z,W=I()){return W("readwrite",(X)=>{return X.put(z,$),E(X.transaction)})};var J0=function($,z=I()){return z("readonly",(W)=>Promise.all($.map((X)=>E(W.get(X)))))};var Z0=function($,z=I()){return z("readwrite",(W)=>{return W.delete($),E(W.transaction)})},S=function($,z=I()){return z("readwrite",(W)=>{return $.forEach((X)=>W.delete(X)),E(W.transaction)})};var j0=function($,z){return $.openCursor().onsuccess=function(){if(!this.result)return;z(this.result),this.result.continue()},E($.transaction)},b=function($=I()){return $("readonly",(z)=>{if(z.getAllKeys)return E(z.getAllKeys());const W=[];return j0(z,(X)=>W.push(X.key)).then(()=>W)})};var y;var L0=6,D0=($)=>`write-${$.toString().padStart(L0,"0")}`;class l{session=N();proposedOperations=new Map;operationLabels=new Map;db;lastIndex=0;load=void 0;op=0;constructor($){this.db=$}async propose($,z,W=!1){if(this.proposedOperations.set($,[z,this.op++]),this.db){if(this.load&&!W)await this.load,this.proposedOperations.delete($),this.proposedOperations.set($,[z,this.op-1]);this.lastIndex++;const X=D0(this.lastIndex);$[this.session]=this.lastIndex,await j(X,[...z.entries()].map(([J,Z])=>[JSON.stringify(J),Z]),this.db),console.log(`STORE ${X} ${JSON.stringify([...z.entries()])}`)}}async label($,z,W=!1){if(this.operationLabels.set(z,$),this.db){if(this.load&&!W)await this.load;const X=$[this.session];if(X===void 0)throw new Error("Cannot label an unproposed operation");const J=`label-${X}`;await j(J,z,this.db),console.log(`STORE ${J} ${z}`)}}async confirm($,z=!1){if(this.operationLabels.has($)){const W=this.operationLabels.get($);if(this.proposedOperations.delete(W),this.operationLabels.delete($),this.db){if(this.load&&!z)await this.load;const X=W[this.session],J=[D0(X),`label-${X}`];await S(J,this.db),console.log(`DEL ${J}`)}}}async cancel($,z=!1){if(this.operationLabels.forEach((W,X)=>{if(W===$)this.operationLabels.delete(X)}),this.proposedOperations.delete($),this.db){if(this.load&&!z)await this.load;const W=$[this.session];await S([`write-${W}`,`label-${W}`],this.db)}}async flatten(){if(this.load)await this.load;const $=new M(H);return this.proposedOperations.forEach(([z,W])=>{z.forEach((X,J)=>{$.set(J,[X,W])})}),$}async restore($,z){return this.db=$,this.proposedOperations.clear(),this.operationLabels.clear(),this.lastIndex=0,this.load=new Promise(async(W)=>{const J=(await b(this.db)).filter((D)=>D.startsWith("write-")).sort();console.log("RESTORE",J);const Z=await J0(J,this.db);for(let D=0;D<J.length;D++){const Q=parseInt(J[D].split("-")[1]);this.lastIndex=Math.max(this.lastIndex,Q)}for(let D=0;D<J.length;D++){const Q=J[D],O=parseInt(Q.split("-")[1]),Y=Z[D].map(([C,B])=>[JSON.parse(C),B]),U=await V(`label-${O}`,this.db);if(!Y)continue;const F=new Map(Y);await z(F,U),await S([`write-${O}`,`label-${O}`],this.db)}W(void 0)}),this.load}}function c($,z){if(z===void 0)return $;if(z===null)return;if(typeof z!=="object"||typeof $!=="object")return z;const W=typeof $==="object"?{...$}:{};for(let X in z)if(z[X]===null)delete W[X];else W[X]=c($[X],z[X]);return W}var u=($)=>JSON.parse(JSON.stringify($));var i="manifest",n={files:{},update:{}};class L{$;session_id=N().substring(0,3);latest_key=".";latest_state=u(n);loading;cache;db;latest_timestamp=0;writes=0;static manifestRegex=/@([0-9a-z]+)_[0-9a-z]+_[0-9a-z]{2}$/;constructor($){this.manifest=$}static manifestTimestamp=($)=>{const z=$.match(L.manifestRegex);if(!z)return 0;return W0(z[1],42)};static isValid($,z){if(!$.match(L.manifestRegex))return console.warn(`Rejecting manifest key ${$}`),!1;if(z===void 0)return!0;const X=this.manifestTimestamp($),J=z,Z=Math.abs(X-J.getTime())<5000;if(!Z)console.warn(`Clock skew detected ${$} vs ${J.getTime()}`);return Z}async restore($){this.db=$,this.loading=V(i,$).then((z)=>{if(z)this.latest_state=z,this.manifest.service.config.log(`RESTORE ${i}`)})}async getLatest(){if(this.loading)await this.loading;if(this.loading=void 0,!this.manifest.service.config.online)return this.latest_state;try{if(this.manifest.service.config.minimizeListObjectsCalls){const Z=await this.manifest.service._getObject({operation:"POLL_TIME",ref:this.manifest.ref,ifNoneMatch:this.cache?.etag,useCache:!1});if(Z.$metadata.httpStatusCode===304)return this.latest_state;if(Z.data===void 0)this.latest_key=".";else this.latest_key=Z.data}const $=`${this.manifest.ref.key}@${h(Date.now()+this.manifest.service.config.clockOffset+1e4)}`,[z,W]=await T(this.manifest.service.s3ClientLite.listObjectV2({Bucket:this.manifest.ref.bucket,Prefix:this.manifest.ref.key+"@",StartAfter:$})),X=z.Contents?.filter((Z)=>{if(!L.isValid(Z.Key,Z.LastModified)){if(this.manifest.service.config.autoclean)this.manifest.service._deleteObject({operation:"CLEANUP",ref:{bucket:this.manifest.ref.bucket,key:Z.Key}});return!1}return!0});if(this.manifest.service.config.log(`${W}ms LIST ${this.manifest.ref.bucket}/${this.manifest.ref.key} from ${$}`),X===void 0)return this.latest_state=u(n),this.latest_state;if(this.latest_timestamp=Math.max(this.latest_timestamp,L.manifestTimestamp(this.latest_key)),X.length>0){this.latest_key=X[0].Key;const Z=await this.manifest.service._getObject({operation:"GET_LATEST",ref:{bucket:this.manifest.ref.bucket,key:this.latest_key}});this.latest_state=Z.data}const J=`${this.manifest.ref.key}@${h(Math.max(L.manifestTimestamp(this.latest_key)-5000,0))}`;for(let Z=X.length-1;Z>=0;Z--){const D=X[Z].Key;if(D>this.latest_key&&D>J){if(this.manifest.service.config.autoclean)this.manifest.service._deleteObject({operation:"CLEANUP",ref:{bucket:this.manifest.ref.bucket,key:D}});continue}const Q=await this.manifest.service._getObject({operation:"SWEEP",ref:{bucket:this.manifest.ref.bucket,key:D}}),O=D.substring(D.lastIndexOf("@")+1);this.latest_state=c(this.latest_state,Q.data?.update),this.manifest.observeVersionId(O)}if(this.db)j(i,this.latest_state,this.db);return this.latest_state}catch($){if($.name==="NoSuchKey")return this.latest_state=n,this.latest_state;else throw $}}updateContent($,z,W){const X=()=>h(Math.max(Date.now()+this.manifest.service.config.clockOffset,this.latest_timestamp))+"_"+this.session_id+"_"+z0(this.writes++);let J=X();const Z=this.manifest.operationQueue.propose(z,$,W.isLoad),D=Z.then(async()=>{try{const Q=await z;let O,Y,U=!1;do{const F=await this.getLatest();F.update={files:{}};for(let[B,_]of Q){const q=H(B);if(_){const K={version:_};F.update.files[q]=K}else F.update.files[q]=null}Y=this.manifest.ref.key+"@"+J,this.manifest.operationQueue.label(z,J,W.isLoad);const C=await this.manifest.service._putObject({operation:"PUT_MANIFEST",ref:{key:Y,bucket:this.manifest.ref.bucket},value:F});if(this.manifest.service.config.adaptiveClock&&!L.isValid(Y,C.Date))this.manifest.service.config.clockOffset=C.Date.getTime()-Date.now()+C.latency,console.log(this.manifest.service.config.clockOffset),J=X(),U=!0;else U=!1}while(U);if(this.manifest.service.config.minimizeListObjectsCalls)O=await this.manifest.service._putObject({operation:"PUT_POLL",ref:{key:this.manifest.ref.key,bucket:this.manifest.ref.bucket},value:this.latest_key});return this.manifest.poll(),O}catch(Q){throw console.error(Q),this.manifest.operationQueue.cancel(z,W.isLoad),Q}});if(W.await==="local")return Z;else return D}}class Q0{$;z;W;queue=Promise.resolve();constructor($,z,W){this.ref=$;this.handler=z;this.lastVersion=W}notify($,z,W){this.queue=this.queue.then(()=>W).then((X)=>{if(z!==this.lastVersion)$.config.log(`${$.config.label} NOTIFY ${H(this.ref)} ${z}`),this.lastVersion=z,this.handler(X)})}}class a{$;z;subscribers=new Set;poller;pollInProgress=!1;syncer=new L(this);operationQueue=new l;constructor($,z){this.service=$;this.ref=z;console.log("Create manifest",H(z))}load($){this.syncer.restore($),this.operationQueue.restore($,async(z,W)=>{if(!W)await this.service._putAll(z,{manifests:[this.ref],await:"local",isLoad:!0});else await this.updateContent(z,Promise.resolve(new Map([[this.ref,W]])),{await:"local",isLoad:!0})})}observeVersionId($){this.operationQueue.confirm($)}async poll(){if(this.pollInProgress)return;if(this.pollInProgress=!0,this.subscriberCount===0&&this.poller)clearInterval(this.poller),this.poller=void 0;if(this.subscriberCount>0&&!this.poller)this.poller=setInterval(()=>this.poll(),this.service.config.pollFrequency);const $=await this.syncer.getLatest();if($===void 0){this.pollInProgress=!1;return}const z=await this.operationQueue.flatten();this.subscribers.forEach(async(W)=>{if(z.has(W.ref)){const[X,J]=z.get(W.ref);W.notify(this.service,`local-${J}`,Promise.resolve(X))}else{const X=$.files[H(W.ref)];if(X){const J=this.service._getObject({operation:"GET_CONTENT",ref:W.ref,version:X.version});W.notify(this.service,X.version,J.then((Z)=>Z.data))}else if(X===null)W.notify(this.service,void 0,Promise.resolve(void 0))}}),this.pollInProgress=!1}updateContent($,z,W){return this.syncer.updateContent($,z,W)}async getVersion($){return(await this.syncer.getLatest()).files[H($)]?.version}subscribe($,z){this.service.config.log(`SUBSCRIBE ${H($)} ${this.subscriberCount+1}`);const W=new Q0($,z);return this.subscribers.add(W),()=>this.subscribers.delete(W)}get subscriberCount(){return this.subscribers.size}}var O0=async($,z)=>{const W=new URL($),X=new URLSearchParams(W.search),J=W.pathname.split("/"),Z=J[1],D=J.slice(2).join("/"),Q=A(Z,"v0");let O,Y=200;if(X.get("list-type")){const U=encodeURIComponent(X.get("prefix")||""),F=encodeURIComponent(X.get("start-after")||"");O=`<ListBucketResult>${(await b(Q)).filter((B)=>`${B}`.startsWith(U)&&`${B}`>F).map((B)=>`<Contents><Key>${B}</Key></Contents>`)}</ListBucketResult>`}else if(z?.method==="GET")O=await V(D,Q),Y=O===void 0?404:200;else if(z?.method==="PUT")O=await z.body,await j(D,O,Q);else if(z?.method==="DELETE")await Z0(D,Q);else throw new Error;return new Response(O,{status:Y})};async function Y0($){const z=(new TextEncoder()).encode($),W=await crypto.subtle.digest("SHA-256",z);return[...new Uint8Array(W)].map((X)=>X.toString(16).padStart(2,"0")).join("")}class P0{static LOCAL_ENDPOINT="indexdb:";config;s3ClientLite;manifests=new M(H);memCache=new M(($)=>`${$.Bucket}${$.Key}${$.VersionId}${$.IfNoneMatch}`);diskCache;endpoint;constructor($){if(this.config={...$,label:$.label||"default",useChecksum:$.useChecksum===!1?!1:!0,autoclean:$.autoclean===!1?!1:!0,online:$.online===!1?!1:!0,offlineStorage:$.offlineStorage===!1?!1:!0,useVersioning:$.useVersioning||!1,pollFrequency:$.pollFrequency||1000,clockOffset:Math.floor($.clockOffset)||0,adaptiveClock:$.adaptiveClock===!1?!1:!0,minimizeListObjectsCalls:$.minimizeListObjectsCalls===!1?!1:!0,parser:$.parser||new DOMParser,defaultManifest:{bucket:$.defaultManifest?.bucket||$.defaultBucket,key:typeof $.defaultManifest=="string"?$.defaultManifest:$.defaultManifest?.key||"manifest.json"},log:(...W)=>($.log||console.log)(this.config.label,...W)},this.config.s3Config?.credentials instanceof Function)throw Error("We can't do that yet");this.endpoint=$.s3Config.endpoint||`https://s3.${$.s3Config.region}.amazonaws.com`;let z;if(this.config.s3Config?.credentials){const W=new g({accessKeyId:this.config.s3Config.credentials.accessKeyId,secretAccessKey:this.config.s3Config.credentials.secretAccessKey,sessionToken:this.config.s3Config.credentials.sessionToken,region:this.config.s3Config.region||"us-east-1",service:"s3",retries:0});z=(...X)=>W.fetch(...X)}else if(this.endpoint==P0.LOCAL_ENDPOINT)z=O0;else z=(global||window).fetch.bind(global||window);if(this.config.offlineStorage){const W=`mps3-${this.config.label}`;this.diskCache=A(W,"v0")}this.s3ClientLite=new d(this.config.online?z:()=>new Promise(()=>{}),this.endpoint,this)}getOrCreateManifest($){if(!this.manifests.has($)){const z=new a(this,$);if(this.manifests.set($,z),this.config.offlineStorage){const W=`mps3-${this.config.label}-${$.bucket}-${$.key}`,X=A(W,"v0");this.config.log(`Restoring manifest from ${W}`),z.load(X)}}return this.manifests.get($)}async get($,z={}){const W={...this.config.defaultManifest,...z.manifest},X=this.getOrCreateManifest(W),J={bucket:$.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof $==="string"?$:$.key},Z=await X.operationQueue.flatten();if(Z.has(J))return this.config.log(`GET (cached) ${J} ${Z.get(J)}`),Z.get(J)[0];const D=await X.getVersion(J);if(D===void 0)return;return(await this._getObject({operation:"GET",ref:J,version:D})).data}async _getObject($){let z;if(this.config.useVersioning)z={Bucket:$.ref.bucket,Key:$.ref.key,IfNoneMatch:$.ifNoneMatch,...$.version&&{VersionId:$.version}};else z={Bucket:$.ref.bucket,Key:`${$.ref.key}${$.version?`@${$.version}`:""}`,IfNoneMatch:$.ifNoneMatch};const W=`${z.Bucket}${z.Key}${z.VersionId}`;if($.useCache!==!1){if(this.memCache.has(z))return this.memCache.get(z);if(this.diskCache){const J=await V(W,this.diskCache);if(J)return this.config.log(`${$.operation} (disk cached) ${W}`),this.memCache.set(z,Promise.resolve(J)),J}}if(!this.config.online)throw new Error(`${this.config.label} Offline and value not cached for ${W}`);const X=T(this.s3ClientLite.getObject(z)).then(async([J,Z])=>{const D={$metadata:J.$metadata,ETag:J.ETag,data:J.Body};return this.config.log(`${Z}ms ${$.operation} ${$.ref.bucket}/${$.ref.key}@${$.version} => ${D.VersionId}`),D}).catch((J)=>{if(J?.name==="304")return{$metadata:{httpStatusCode:304},data:void 0};else throw J});if($.useCache!==!1){if(this.memCache.set(z,X),this.diskCache)X.then((J)=>{j(`${z.Bucket}${z.Key}${z.VersionId}`,J,this.diskCache).then(()=>this.config.log(`STORE ${z.Bucket}${z.Key}`))})}return X}async delete($,z={}){return this.putAll(new Map([[$,void 0]]),z)}async put($,z,W={}){return this.putAll(new Map([[$,z]]),W)}async putAll($,z={}){const W=new Map([...$].map(([J,Z])=>[{bucket:J.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof J==="string"?J:J.key},Z])),X=(z?.manifests||[this.config.defaultManifest]).map((J)=>({...this.config.defaultManifest,...J}));return this._putAll(W,{manifests:X,await:z.await||this.config.online?"remote":"local"})}async _putAll($,z){const W=new Map,X=new Promise(async(J,Z)=>{const D=new Map,Q=[];$.forEach((O,Y)=>{if(O!==void 0){let U=this.config.useVersioning?void 0:N();W.set(Y,O),Q.push(this._putObject({operation:"PUT_CONTENT",ref:Y,value:O,version:U}).then((F)=>{if(this.config.useVersioning)if(F.VersionId===void 0)throw console.error(F),Error(`Bucket ${Y.bucket} is not version enabled!`);else U=F.VersionId;D.set(Y,U)}))}else Q.push(this._deleteObject({ref:Y}).then((U)=>{D.set(Y,void 0)}))}),await Promise.all(Q).catch(Z),J(D)});return Promise.all(z.manifests.map((J)=>{return this.getOrCreateManifest(J).updateContent(W,X,{await:z.await,isLoad:z.isLoad===!0})}))}async _putObject($){const z=JSON.stringify($.value,null,2);let W;if(this.config.useVersioning)W={Bucket:$.ref.bucket,Key:$.ref.key,ContentType:"application/json",Body:z,...this.config.useChecksum&&{ChecksumSHA256:await Y0(z)}};else W={Bucket:$.ref.bucket,Key:`${$.ref.key}${$.version?`@${$.version}`:""}`,ContentType:"application/json",Body:z,...this.config.useChecksum&&{ChecksumSHA256:await Y0(z)}};const[X,J]=await T(this.s3ClientLite.putObject(W));if(this.config.log(`${J}ms ${$.operation} ${W.Bucket}/${W.Key} => ${X.VersionId}`),this.diskCache){const Z=`${W.Bucket}${W.Key}${$.version||X.VersionId}`;await j(Z,{$metadata:{httpStatusCode:200},etag:X.ETag,data:JSON.parse(z)},this.diskCache).then(()=>this.config.log(`STORE ${Z}`))}return{...X,latency:J}}async _deleteObject($){const z={Bucket:$.ref.bucket,Key:$.ref.key},[W,X]=await T(this.s3ClientLite.deleteObject(z));return this.config.log(`${X}ms ${$.operation||"DELETE"} ${$.ref.bucket}/${$.ref.key} (${W.$metadata.httpStatusCode})}`),W}subscribe($,z,W){const X={...this.config.defaultManifest,...W?.manifest},J={key:typeof $==="string"?$:$.key,bucket:$.bucket||this.config.defaultBucket||X.bucket},Z=this.getOrCreateManifest(X),D=Z.subscribe(J,z);return this.get(J,{manifest:X}).then((Q)=>{this.config.log(`NOTIFY (initial) ${H(J)}`),queueMicrotask(()=>{z(Q,void 0),Z.poll()})}).catch((Q)=>{z(void 0,Q)}),D}refresh(){return Promise.all([...this.manifests.values()].map(($)=>$.poll()))}get subscriberCount(){return[...this.manifests.values()].reduce(($,z)=>$+z.subscriberCount,0)}}export{P0 as MPS3};
