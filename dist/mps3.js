async function w($,D){const z=await crypto.subtle.importKey("raw",typeof $==="string"?v.encode($):$,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return crypto.subtle.sign("HMAC",z,v.encode(D))}async function t($){return crypto.subtle.digest("SHA-256",typeof $==="string"?v.encode($):$)}var b=function($){return Array.prototype.map.call(new Uint8Array($),(D)=>("0"+D.toString(16)).slice(-2)).join("")},r=function($){return $.replace(/[!'()*]/g,(D)=>"%"+D.charCodeAt(0).toString(16).toUpperCase())},P$=function($,D){const{hostname:z,pathname:W}=$;if(z.endsWith(".r2.cloudflarestorage.com"))return["s3","auto"];if(z.endsWith(".backblazeb2.com")){const Z=z.match(/^(?:[^.]+\.)?s3\.([^.]+)\.backblazeb2\.com$/);return Z!=null?["s3",Z[1]]:["",""]}const X=z.replace("dualstack.","").match(/([^.]+)\.(?:([^.]*)\.)?amazonaws\.com(?:\.cn)?$/);let[J,O]=(X||["",""]).slice(1,3);if(O==="us-gov")O="us-gov-west-1";else if(O==="s3"||O==="s3-accelerate")O="us-east-1",J="s3";else if(J==="iot")if(z.startsWith("iot."))J="execute-api";else if(z.startsWith("data.jobs.iot."))J="iot-jobs-data";else J=W==="/mqtt"?"iotdevicegateway":"iotdata";else if(J==="autoscaling"){const Z=(D.get("X-Amz-Target")||"").split(".")[0];if(Z==="AnyScaleFrontendService")J="application-autoscaling";else if(Z==="AnyScaleScalingPlannerFrontendService")J="autoscaling-plans"}else if(O==null&&J.startsWith("s3-"))O=J.slice(3).replace(/^fips-|^external-1/,""),J="s3";else if(J.endsWith("-fips"))J=J.slice(0,-5);else if(O&&/-\d$/.test(J)&&!/-\d$/.test(O))[J,O]=[O,J];return[Y$[J]||J,O]},v=new TextEncoder,Y$={appstream2:"appstream",cloudhsmv2:"cloudhsm",email:"ses",marketplace:"aws-marketplace",mobile:"AWSMobileHubService",pinpoint:"mobiletargeting",queue:"sqs","git-codecommit":"codecommit","mturk-requester-sandbox":"mturk-requester","personalize-runtime":"personalize"},U$=new Set(["authorization","content-type","content-length","user-agent","presigned-expires","expect","x-amzn-trace-id","range","connection"]);class k{constructor({accessKeyId:$,secretAccessKey:D,sessionToken:z,service:W,region:X,cache:J,retries:O,initRetryMs:Z}){if($==null)throw new TypeError("accessKeyId is a required option");if(D==null)throw new TypeError("secretAccessKey is a required option");this.accessKeyId=$,this.secretAccessKey=D,this.sessionToken=z,this.service=W,this.region=X,this.cache=J||new Map,this.retries=O!=null?O:10,this.initRetryMs=Z||50}async sign($,D){if($ instanceof Request){const{method:X,url:J,headers:O,body:Z}=$;if(D=Object.assign({method:X,url:J,headers:O},D),D.body==null&&O.has("Content-Type"))D.body=Z!=null&&O.has("X-Amz-Content-Sha256")?Z:await $.clone().arrayBuffer();$=J}const z=new s(Object.assign({url:$},D,this,D&&D.aws)),W=Object.assign({},D,await z.sign());delete W.aws;try{return new Request(W.url.toString(),W)}catch(X){if(X instanceof TypeError)return new Request(W.url.toString(),Object.assign({duplex:"half"},W));throw X}}async fetch($,D){for(let z=0;z<=this.retries;z++){const W=fetch(await this.sign($,D));if(z===this.retries)return W;const X=await W;if(X.status<500&&X.status!==429)return X;await new Promise((J)=>setTimeout(J,Math.random()*this.initRetryMs*Math.pow(2,z)))}throw new Error("An unknown error occurred, ensure retries is not negative")}}class s{constructor({method:$,url:D,headers:z,body:W,accessKeyId:X,secretAccessKey:J,sessionToken:O,service:Z,region:Q,cache:P,datetime:Y,signQuery:U,appendSessionToken:F,allHeaders:B,singleEncode:_}){if(D==null)throw new TypeError("url is a required option");if(X==null)throw new TypeError("accessKeyId is a required option");if(J==null)throw new TypeError("secretAccessKey is a required option");this.method=$||(W?"POST":"GET"),this.url=new URL(D),this.headers=new Headers(z||{}),this.body=W,this.accessKeyId=X,this.secretAccessKey=J,this.sessionToken=O;let q,K;if(!Z||!Q)[q,K]=P$(this.url,this.headers);if(this.service=Z||q||"",this.region=Q||K||"us-east-1",this.cache=P||new Map,this.datetime=Y||(new Date()).toISOString().replace(/[:-]|\.\d{3}/g,""),this.signQuery=U,this.appendSessionToken=F||this.service==="iotdevicegateway",this.headers.delete("Host"),this.service==="s3"&&!this.signQuery&&!this.headers.has("X-Amz-Content-Sha256"))this.headers.set("X-Amz-Content-Sha256","UNSIGNED-PAYLOAD");const G=this.signQuery?this.url.searchParams:this.headers;if(G.set("X-Amz-Date",this.datetime),this.sessionToken&&!this.appendSessionToken)G.set("X-Amz-Security-Token",this.sessionToken);if(this.signableHeaders=["host",...this.headers.keys()].filter((H)=>B||!U$.has(H)).sort(),this.signedHeaders=this.signableHeaders.join(";"),this.canonicalHeaders=this.signableHeaders.map((H)=>H+":"+(H==="host"?this.url.host:(this.headers.get(H)||"").replace(/\s+/g," "))).join("\n"),this.credentialString=[this.datetime.slice(0,8),this.region,this.service,"aws4_request"].join("/"),this.signQuery){if(this.service==="s3"&&!G.has("X-Amz-Expires"))G.set("X-Amz-Expires","86400");G.set("X-Amz-Algorithm","AWS4-HMAC-SHA256"),G.set("X-Amz-Credential",this.accessKeyId+"/"+this.credentialString),G.set("X-Amz-SignedHeaders",this.signedHeaders)}if(this.service==="s3")try{this.encodedPath=decodeURIComponent(this.url.pathname.replace(/\+/g," "))}catch(H){this.encodedPath=this.url.pathname}else this.encodedPath=this.url.pathname.replace(/\/+/g,"/");if(!_)this.encodedPath=encodeURIComponent(this.encodedPath).replace(/%2F/g,"/");this.encodedPath=r(this.encodedPath);const n=new Set;this.encodedSearch=[...this.url.searchParams].filter(([H])=>{if(!H)return!1;if(this.service==="s3"){if(n.has(H))return!1;n.add(H)}return!0}).map((H)=>H.map((R)=>r(encodeURIComponent(R)))).sort(([H,R],[a,o])=>H<a?-1:H>a?1:R<o?-1:R>o?1:0).map((H)=>H.join("=")).join("&")}async sign(){if(this.signQuery){if(this.url.searchParams.set("X-Amz-Signature",await this.signature()),this.sessionToken&&this.appendSessionToken)this.url.searchParams.set("X-Amz-Security-Token",this.sessionToken)}else this.headers.set("Authorization",await this.authHeader());return{method:this.method,url:this.url,headers:this.headers,body:this.body}}async authHeader(){return["AWS4-HMAC-SHA256 Credential="+this.accessKeyId+"/"+this.credentialString,"SignedHeaders="+this.signedHeaders,"Signature="+await this.signature()].join(", ")}async signature(){const $=this.datetime.slice(0,8),D=[this.secretAccessKey,$,this.region,this.service].join();let z=this.cache.get(D);if(!z){const W=await w("AWS4"+this.secretAccessKey,$),X=await w(W,this.region),J=await w(X,this.service);z=await w(J,"aws4_request"),this.cache.set(D,z)}return b(await w(z,await this.stringToSign()))}async stringToSign(){return["AWS4-HMAC-SHA256",this.datetime,this.credentialString,b(await t(await this.canonicalString()))].join("\n")}async canonicalString(){return[this.method.toUpperCase(),this.encodedPath,this.encodedSearch,this.canonicalHeaders+"\n",this.signedHeaders,await this.hexBodyHash()].join("\n")}async hexBodyHash(){let $=this.headers.get("X-Amz-Content-Sha256")||(this.service==="s3"&&this.signQuery?"UNSIGNED-PAYLOAD":null);if($==null){if(this.body&&typeof this.body!=="string"&&!("byteLength"in this.body))throw new Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");$=b(await t(this.body||""))}return $}}var e=($=0)=>`${$}`.padStart(14,"0");var N=async($)=>{const D=Date.now();return[await $,Date.now()-D]},g=($,D)=>{if(D.adaptiveClock)return N($).then(([z,W])=>{if(z.status!==200)return z;const X=z.headers.get("date");if(X){let J=0;const O=new Date(X).getTime(),Z=Date.now()+D.clockOffset;if(Z<O-W)J=O-Z-W;else if(Z>O+1000+W)J=O+1000-Z+W;if(J>0)D.clockOffset=D.clockOffset+J;if(J>0)console.log("latency",W,"error",J,"local_time",Z,"server_time",O,"config.clockOffset",D.clockOffset)}return z});return $};var $$=($,D)=>{const z=D.parseFromString($,"text/xml");if(!z)throw new Error(`Invalid XML: ${$}`);const W=z.getElementsByTagName("Contents"),X=(J,O)=>{const Z=J.getElementsByTagName(O)[0]?.textContent;return Z?decodeURIComponent(Z.replace(/\+/g," ")):void 0};return{$metadata:{},Contents:Array.from(W).map((J)=>{const O=X(J,"LastModified");return{ETag:X(J,"ETag"),Key:X(J,"Key"),LastModified:O?new Date(O):void 0}}),KeyCount:parseInt(X(z,"KeyCount")),ContinuationToken:X(z,"ContinuationToken"),NextContinuationToken:X(z,"NextContinuationToken"),StartAfter:X(z,"StartAfter")}};var x=async($,{retries:D=Number.MAX_VALUE,delay:z=100,max_delay:W=1e4}={})=>{try{return await $()}catch(X){if(D>0)return await new Promise((J)=>setTimeout(J,z)),x($,{retries:D-1,max_delay:W,delay:Math.min(z*1.5,W)});throw X}};class f{$;D;z;constructor($,D,z){this.fetch=$;this.endpoint=D;this.mps3=z}getUrl($,D,z){return`${this.endpoint}/${$}${D?`/${encodeURIComponent(D)}`:""}${z||""}`}async listObjectV2($){for(let D=0;D<10;D++){const z=this.getUrl($.Bucket,void 0,`/?list-type=2&prefix=${$.Prefix}&start-after=${$.StartAfter}`),W=await x(()=>this.fetch(z,{}));if(W.status===200)return $$(await W.text(),this.mps3.config.parser);else if(W.status===429)console.warn("listObjectV2: 429, retrying"),await new Promise((X)=>setTimeout(X,1000));else throw new Error(`Unexpected response: ${W.status} ${await W.text()}`)}throw new Error("Cannot contact server")}async putObject({Bucket:$,Key:D,Body:z,ChecksumSHA256:W}){const X=this.getUrl($,D),J=await x(()=>g(this.fetch(X,{method:"PUT",body:z,headers:{"Content-Type":"application/json",...W&&{"x-amz-content-sha256":W}}}),this.mps3.config));if(J.status!==200)throw new Error(`Failed to PUT: ${await J.text()}`);return{$metadata:{httpStatusCode:J.status},Date:new Date(J.headers.get("date")),ETag:J.headers.get("ETag"),...J.headers.get("x-amz-version-id")&&{VersionId:J.headers.get("x-amz-version-id")}}}async deleteObject({Bucket:$,Key:D}){return{$metadata:{httpStatusCode:(await x(()=>this.fetch(this.getUrl($,D),{method:"DELETE"}))).status}}}async getObject({Bucket:$,Key:D,VersionId:z,IfNoneMatch:W}){const X=this.getUrl($,D,z?`?versionId=${z}`:""),J=await x(()=>g(this.fetch(X,{method:"GET",headers:{"If-None-Match":W}}),this.mps3.config));switch(J.status){case 304:throw new Error("304");case 404:return{$metadata:{httpStatusCode:404}};case 403:throw new Error("Access denied");default:{let O;const Z=J.headers.get("content-type"),Q=await J.text();if(Z==="application/json"||Q&&Q!=="")try{O=JSON.parse(Q)}catch(P){throw new Error(`Failed to parse response as JSON ${X}`)}return{$metadata:{httpStatusCode:J.status},Body:O,ETag:J.headers.get("ETag"),...J.headers.get("x-amz-version-id")&&{VersionId:J.headers.get("x-amz-version-id")}}}}}}class T{key;_vals;_keys;constructor($,D){if(this.key=$,this._vals=new Map,this._keys=new Map,D)for(let[z,W]of D)this.set(z,W)}get size(){return this._vals.size}set($,D){const z=this.key($);return this._vals.set(z,D),this._keys.set(z,$),this}get($){return this._vals.get(this.key($))}delete($){const D=this.key($);return this._keys.delete(D),this._vals.delete(D)}has($){return this._vals.has(this.key($))}values(){return this._vals.values()}keys(){return this._keys.values()}forEach($){return this._vals.forEach((D,z,W)=>$(D,this._keys.get(z)))}}var A=()=>crypto.randomUUID(),D$=($)=>$.toString(36).padStart(4,"0");var E=($)=>`${$.bucket}/${$.key}`;var j=function($){return new Promise((D,z)=>{$.oncomplete=$.onsuccess=()=>D($.result),$.onabort=$.onerror=()=>z($.error)})},M=function($,D){const z=indexedDB.open($);z.onupgradeneeded=()=>z.result.createObjectStore(D);const W=j(z);return(X,J)=>W.then((O)=>J(O.transaction(D,X).objectStore(D)))},I=function(){if(!m)m=M("keyval-store","keyval");return m},V=function($,D=I()){return D("readonly",(z)=>j(z.get($)))},L=function($,D,z=I()){return z("readwrite",(W)=>{return W.put(D,$),j(W.transaction)})};var z$=function($,D=I()){return D("readonly",(z)=>Promise.all($.map((W)=>j(z.get(W)))))};var W$=function($,D=I()){return D("readwrite",(z)=>{return z.delete($),j(z.transaction)})},h=function($,D=I()){return D("readwrite",(z)=>{return $.forEach((W)=>z.delete(W)),j(z.transaction)})};var H$=function($,D){return $.openCursor().onsuccess=function(){if(!this.result)return;D(this.result),this.result.continue()},j($.transaction)},S=function($=I()){return $("readonly",(D)=>{if(D.getAllKeys)return j(D.getAllKeys());const z=[];return H$(D,(W)=>z.push(W.key)).then(()=>z)})};var m;var B$=6,X$=($)=>`write-${$.toString().padStart(B$,"0")}`;class u{session=A();proposedOperations=new Map;operationLabels=new Map;db;lastIndex=0;load=void 0;op=0;constructor($){this.db=$}async propose($,D,z=!1){if(this.proposedOperations.set($,[D,this.op++]),this.db){if(this.load&&!z)await this.load,this.proposedOperations.delete($),this.proposedOperations.set($,[D,this.op-1]);this.lastIndex++;const W=X$(this.lastIndex);$[this.session]=this.lastIndex,await L(W,[...D.entries()].map(([X,J])=>[JSON.stringify(X),J]),this.db),console.log(`STORE ${W} ${JSON.stringify([...D.entries()])}`)}}async label($,D,z=!1){if(this.operationLabels.set(D,$),this.db){if(this.load&&!z)await this.load;const W=$[this.session];if(W===void 0)throw new Error("Cannot label an unproposed operation");const X=`label-${W}`;await L(X,D,this.db),console.log(`STORE ${X} ${D}`)}}async confirm($,D=!1){if(this.operationLabels.has($)){const z=this.operationLabels.get($);if(this.proposedOperations.delete(z),this.operationLabels.delete($),this.db){if(this.load&&!D)await this.load;const W=z[this.session],X=[X$(W),`label-${W}`];await h(X,this.db),console.log(`DEL ${X}`)}}}async cancel($,D=!1){if(this.operationLabels.forEach((z,W)=>{if(z===$)this.operationLabels.delete(W)}),this.proposedOperations.delete($),this.db){if(this.load&&!D)await this.load;const z=$[this.session];await h([`write-${z}`,`label-${z}`],this.db)}}async flatten(){if(this.load)await this.load;const $=new T(E);return this.proposedOperations.forEach(([D,z])=>{D.forEach((W,X)=>{$.set(X,[W,z])})}),$}async restore($,D){return this.db=$,this.proposedOperations.clear(),this.operationLabels.clear(),this.lastIndex=0,this.load=new Promise(async(z)=>{const X=(await S(this.db)).filter((O)=>O.startsWith("write-")).sort();console.log("RESTORE",X);const J=await z$(X,this.db);for(let O=0;O<X.length;O++){const Z=parseInt(X[O].split("-")[1]);this.lastIndex=Math.max(this.lastIndex,Z)}for(let O=0;O<X.length;O++){const Z=X[O],Q=parseInt(Z.split("-")[1]),P=J[O].map(([F,B])=>[JSON.parse(F),B]),Y=await V(`label-${Q}`,this.db);if(!P)continue;const U=new Map(P);await D(U,Y),await h([`write-${Q}`,`label-${Q}`],this.db)}z(void 0)}),this.load}}function y($,D){if(D===void 0)return $;if(D===null)return;if(typeof D!=="object"||typeof $!=="object")return D;const z=typeof $==="object"?{...$}:{};for(let W in D)if(D[W]===null)delete z[W];else z[W]=y($[W],D[W]);return z}var d=($)=>JSON.parse(JSON.stringify($));var l="manifest",c={previous:".",files:{},update:{}};class C{$;session_id=A().substring(0,3);latest_key="";latest_state=d(c);loading;cache;db;latest_timestamp=0;writes=0;constructor($){this.manifest=$}static manifestTimestamp=($)=>{const D=$.match(/@([0-9]+)_[0-9a-f]+_[0-9a-z]{4}$/);if(!D)return console.warn(`Rejecting manifest key ${$}`),0;return Number.parseInt(D[1])};static isValid($,D){const z=$.match(/@([0-9]+)_[0-9a-f]+_[0-9a-z]{4}$/);if(!z)return console.warn(`Rejecting manifest key ${$}`),!1;if(D===void 0)return!0;const W=Number.parseInt(z[1]),X=D,J=Math.abs(W-X.getTime())<5000;if(!J)console.warn(`Clock skew detected ${$} vs ${X.getTime()}`);return J}async restore($){this.db=$,this.loading=V(l,$).then((D)=>{if(D)this.latest_state=D,this.manifest.service.config.log(`RESTORE ${l}`)})}async getLatest(){if(this.loading)await this.loading;if(this.loading=void 0,!this.manifest.service.config.online)return this.latest_state;try{const $=await this.manifest.service._getObject({operation:"POLL_TIME",ref:this.manifest.ref,ifNoneMatch:this.cache?.etag,useCache:!1});if($.$metadata.httpStatusCode===304)return this.latest_state;if($.data===void 0)this.latest_key=".";else this.latest_key=$.data;const D=C.manifestTimestamp(this.latest_key),z=Date.now()+this.manifest.service.config.clockOffset-1e4,W=Math.min(D,z),X=`${this.manifest.ref.key}@${W.toString().padStart(14,"0")}`,[J,O]=await N(this.manifest.service.s3ClientLite.listObjectV2({Bucket:this.manifest.ref.bucket,Prefix:this.manifest.ref.key+"@",StartAfter:X})),Z=J.Contents?.filter((Y)=>{if(!C.isValid(Y.Key,Y.LastModified)){if(this.manifest.service.config.autoclean)this.manifest.service._deleteObject({operation:"CLEANUP",ref:{bucket:this.manifest.ref.bucket,key:Y.Key}});return!1}return!0});if(this.manifest.service.config.log(`${O}ms LIST ${this.manifest.ref.bucket}/${this.manifest.ref.key} from ${X}`),Z===void 0)return this.latest_state=d(c),this.latest_state;const Q=`${this.manifest.ref.key}@${Math.max(C.manifestTimestamp(this.latest_key)-5000,0).toString().padStart(14,"0")}`;this.latest_timestamp=Math.max(this.latest_timestamp,C.manifestTimestamp(this.latest_key));let P=!1;for(let Y=Z.length-1;Y>=0;Y--){const U=Z[Y].Key,F={bucket:this.manifest.ref.bucket,key:U},B=await this.manifest.service._getObject({operation:"LOOK_BACK",ref:F});if(B.data===void 0){if(this.manifest.service.config.autoclean)this.manifest.service._deleteObject({operation:"CLEANUP",ref:F});continue}else if(P===!1)this.latest_state=B.data,this.latest_key=U,P=!0}for(let Y=0;Y<Z.length;Y++){const U=Z[Y].Key;if(U<this.latest_key&&U<Q){if(this.manifest.service.config.autoclean)this.manifest.service._deleteObject({operation:"CLEANUP",ref:{bucket:this.manifest.ref.bucket,key:U}});continue}const F=await this.manifest.service._getObject({operation:"SWEEP",ref:{bucket:this.manifest.ref.bucket,key:U}}),B=U.substring(U.lastIndexOf("@")+1);this.latest_state=y(this.latest_state,F.data?.update),this.manifest.observeVersionId(B)}if(this.db)L(l,this.latest_state,this.db);return this.latest_state}catch($){if($.name==="NoSuchKey")return this.latest_state=c,this.latest_state;else throw $}}updateContent($,D,z){const W=()=>e(Math.max(Date.now()+this.manifest.service.config.clockOffset,this.latest_timestamp))+"_"+this.session_id+"_"+D$(this.writes++);let X=W();const J=this.manifest.operationQueue.propose(D,$,z.isLoad),O=J.then(async()=>{try{const Z=await D;let Q,P,Y=!1;do{const U=await this.getLatest();U.previous=this.latest_key,U.update={files:{}};for(let[B,_]of Z){const q=E(B);if(_){const K={version:_};U.update.files[q]=K}else U.update.files[q]=null}P=this.manifest.ref.key+"@"+X,this.manifest.operationQueue.label(D,X,z.isLoad);const F=await this.manifest.service._putObject({operation:"PUT_MANIFEST",ref:{key:P,bucket:this.manifest.ref.bucket},value:U});if(this.manifest.service.config.adaptiveClock&&!C.isValid(P,F.Date))this.manifest.service.config.clockOffset=F.Date.getTime()-Date.now()+F.latency,console.log(this.manifest.service.config.clockOffset),X=W(),Y=!0;else Y=!1}while(Y);return Q=await this.manifest.service._putObject({operation:"PUT_POLL",ref:{key:this.manifest.ref.key,bucket:this.manifest.ref.bucket},value:this.latest_key}),this.manifest.poll(),Q}catch(Z){throw console.error(Z),this.manifest.operationQueue.cancel(D,z.isLoad),Z}});if(z.await==="local")return J;else return O}}class J${$;D;z;queue=Promise.resolve();constructor($,D,z){this.ref=$;this.handler=D;this.lastVersion=z}notify($,D,z){this.queue=this.queue.then(()=>z).then((W)=>{if(D!==this.lastVersion)$.config.log(`${$.config.label} NOTIFY ${E(this.ref)} ${D}`),this.lastVersion=D,this.handler(W)})}}class i{$;D;subscribers=new Set;poller;pollInProgress=!1;syncer=new C(this);operationQueue=new u;constructor($,D){this.service=$;this.ref=D;console.log("Create manifest",E(D))}load($){this.syncer.restore($),this.operationQueue.restore($,async(D,z)=>{if(!z)await this.service._putAll(D,{manifests:[this.ref],await:"local",isLoad:!0});else await this.updateContent(D,Promise.resolve(new Map([[this.ref,z]])),{await:"local",isLoad:!0})})}observeVersionId($){this.operationQueue.confirm($)}async poll(){if(this.pollInProgress)return;if(this.pollInProgress=!0,this.subscriberCount===0&&this.poller)clearInterval(this.poller),this.poller=void 0;if(this.subscriberCount>0&&!this.poller)this.poller=setInterval(()=>this.poll(),this.service.config.pollFrequency);const $=await this.syncer.getLatest();if($===void 0){this.pollInProgress=!1;return}const D=await this.operationQueue.flatten();this.subscribers.forEach(async(z)=>{if(D.has(z.ref)){const[W,X]=D.get(z.ref);z.notify(this.service,`local-${X}`,Promise.resolve(W))}else{const W=$.files[E(z.ref)];if(W){const X=this.service._getObject({operation:"GET_CONTENT",ref:z.ref,version:W.version});z.notify(this.service,W.version,X.then((J)=>J.data))}else if(W===null)z.notify(this.service,void 0,Promise.resolve(void 0))}}),this.pollInProgress=!1}updateContent($,D,z){return this.syncer.updateContent($,D,z)}async getVersion($){return(await this.syncer.getLatest()).files[E($)]?.version}subscribe($,D){this.service.config.log(`SUBSCRIBE ${E($)} ${this.subscriberCount+1}`);const z=new J$($,D);return this.subscribers.add(z),()=>this.subscribers.delete(z)}get subscriberCount(){return this.subscribers.size}}var O$=async($,D)=>{const z=new URL($),W=new URLSearchParams(z.search),X=z.pathname.split("/"),J=X[1],O=X.slice(2).join("/"),Z=M(J,"v0");let Q,P=200;if(W.get("list-type")){const Y=encodeURIComponent(W.get("prefix")||""),U=encodeURIComponent(W.get("start-after")||"");Q=`<ListBucketResult>${(await S(Z)).filter((B)=>`${B}`.startsWith(Y)&&`${B}`>U).map((B)=>`<Contents><Key>${B}</Key></Contents>`)}</ListBucketResult>`}else if(D?.method==="GET")Q=await V(O,Z),P=Q===void 0?404:200;else if(D?.method==="PUT")Q=await D.body,await L(O,Q,Z);else if(D?.method==="DELETE")await W$(O,Z);else throw new Error;return new Response(Q,{status:P})};async function Z$($){const D=(new TextEncoder()).encode($),z=await crypto.subtle.digest("SHA-256",D);return[...new Uint8Array(z)].map((W)=>W.toString(16).padStart(2,"0")).join("")}class Q${static LOCAL_ENDPOINT="indexdb:";config;s3ClientLite;manifests=new T(E);memCache=new T(($)=>`${$.Bucket}${$.Key}${$.VersionId}${$.IfNoneMatch}`);diskCache;endpoint;constructor($){if(this.config={...$,label:$.label||"default",useChecksum:$.useChecksum===!1?!1:!0,autoclean:$.autoclean===!1?!1:!0,online:$.online===!1?!1:!0,offlineStorage:$.offlineStorage===!1?!1:!0,useVersioning:$.useVersioning||!1,pollFrequency:$.pollFrequency||1000,clockOffset:Math.floor($.clockOffset)||0,adaptiveClock:$.adaptiveClock===!1?!1:!0,parser:$.parser||new DOMParser,defaultManifest:{bucket:$.defaultManifest?.bucket||$.defaultBucket,key:typeof $.defaultManifest=="string"?$.defaultManifest:$.defaultManifest?.key||"manifest.json"},log:(...z)=>($.log||console.log)(this.config.label,...z)},this.config.s3Config?.credentials instanceof Function)throw Error("We can't do that yet");this.endpoint=$.s3Config.endpoint||`https://s3.${$.s3Config.region}.amazonaws.com`;let D;if(this.config.s3Config?.credentials){const z=new k({accessKeyId:this.config.s3Config.credentials.accessKeyId,secretAccessKey:this.config.s3Config.credentials.secretAccessKey,sessionToken:this.config.s3Config.credentials.sessionToken,region:this.config.s3Config.region||"us-east-1",service:"s3",retries:0});D=(...W)=>z.fetch(...W)}else if(this.endpoint==Q$.LOCAL_ENDPOINT)D=O$;else D=(global||window).fetch.bind(global||window);if(this.config.offlineStorage){const z=`mps3-${this.config.label}`;this.diskCache=M(z,"v0")}this.s3ClientLite=new f(this.config.online?D:()=>new Promise(()=>{}),this.endpoint,this)}getOrCreateManifest($){if(!this.manifests.has($)){const D=new i(this,$);if(this.manifests.set($,D),this.config.offlineStorage){const z=`mps3-${this.config.label}-${$.bucket}-${$.key}`,W=M(z,"v0");this.config.log(`Restoring manifest from ${z}`),D.load(W)}}return this.manifests.get($)}async get($,D={}){const z={...this.config.defaultManifest,...D.manifest},W=this.getOrCreateManifest(z),X={bucket:$.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof $==="string"?$:$.key},J=await W.operationQueue.flatten();if(J.has(X))return this.config.log(`GET (cached) ${X} ${J.get(X)}`),J.get(X)[0];const O=await W.getVersion(X);if(O===void 0)return;return(await this._getObject({operation:"GET",ref:X,version:O})).data}async _getObject($){let D;if(this.config.useVersioning)D={Bucket:$.ref.bucket,Key:$.ref.key,IfNoneMatch:$.ifNoneMatch,...$.version&&{VersionId:$.version}};else D={Bucket:$.ref.bucket,Key:`${$.ref.key}${$.version?`@${$.version}`:""}`,IfNoneMatch:$.ifNoneMatch};const z=`${D.Bucket}|${D.Key}|${D.VersionId}`;if($.useCache!==!1){if(this.memCache.has(D))return this.memCache.get(D);if(this.diskCache){const X=await V(z,this.diskCache);if(X)return this.config.log(`${$.operation} (disk cached) ${z}`),this.memCache.set(D,Promise.resolve(X)),X}}if(!this.config.online)throw new Error(`${this.config.label} Offline and value not cached for ${z}`);const W=N(this.s3ClientLite.getObject(D)).then(async([X,J])=>{const O={$metadata:X.$metadata,ETag:X.ETag,data:X.Body};return this.config.log(`${J}ms ${$.operation} ${$.ref.bucket}/${$.ref.key}@${$.version} => ${O.VersionId}`),O}).catch((X)=>{if(X?.name==="304")return{$metadata:{httpStatusCode:304},data:void 0};else throw X});if($.useCache!==!1){if(this.memCache.set(D,W),this.diskCache)W.then((X)=>{L(`${D.Bucket}${D.Key}${D.VersionId}`,X,this.diskCache).then(()=>this.config.log(`STORE ${D.Bucket}${D.Key}`))})}return W}async delete($,D={}){return this.putAll(new Map([[$,void 0]]),D)}async put($,D,z={}){return this.putAll(new Map([[$,D]]),z)}async putAll($,D={}){const z=new Map([...$].map(([X,J])=>[{bucket:X.bucket||this.config.defaultBucket||this.config.defaultManifest.bucket,key:typeof X==="string"?X:X.key},J])),W=(D?.manifests||[this.config.defaultManifest]).map((X)=>({...this.config.defaultManifest,...X}));return this._putAll(z,{manifests:W,await:D.await||this.config.online?"remote":"local"})}async _putAll($,D){const z=new Map,W=new Promise(async(X,J)=>{const O=new Map,Z=[];$.forEach((Q,P)=>{if(Q!==void 0){let Y=this.config.useVersioning?void 0:A();z.set(P,Q),Z.push(this._putObject({operation:"PUT_CONTENT",ref:P,value:Q,version:Y}).then((U)=>{if(this.config.useVersioning)if(U.VersionId===void 0)throw console.error(U),Error(`Bucket ${P.bucket} is not version enabled!`);else Y=U.VersionId;O.set(P,Y)}))}else Z.push(this._deleteObject({ref:P}).then((Y)=>{O.set(P,void 0)}))}),await Promise.all(Z).catch(J),X(O)});return Promise.all(D.manifests.map((X)=>{return this.getOrCreateManifest(X).updateContent(z,W,{await:D.await,isLoad:D.isLoad===!0})}))}async _putObject($){const D=JSON.stringify($.value,null,2);let z;if(this.config.useVersioning)z={Bucket:$.ref.bucket,Key:$.ref.key,ContentType:"application/json",Body:D,...this.config.useChecksum&&{ChecksumSHA256:await Z$(D)}};else z={Bucket:$.ref.bucket,Key:`${$.ref.key}${$.version?`@${$.version}`:""}`,ContentType:"application/json",Body:D,...this.config.useChecksum&&{ChecksumSHA256:await Z$(D)}};const[W,X]=await N(this.s3ClientLite.putObject(z));if(this.config.log(`${X}ms ${$.operation} ${z.Bucket}/${z.Key} => ${W.VersionId}`),this.diskCache){const J=`${z.Bucket}${z.Key}${$.version||W.VersionId}`;await L(J,{$metadata:{httpStatusCode:200},etag:W.ETag,data:JSON.parse(D)},this.diskCache).then(()=>this.config.log(`STORE ${J}`))}return{...W,latency:X}}async _deleteObject($){const D={Bucket:$.ref.bucket,Key:$.ref.key},[z,W]=await N(this.s3ClientLite.deleteObject(D));return this.config.log(`${W}ms ${$.operation||"DELETE"} ${$.ref.bucket}/${$.ref.key} (${z.$metadata.httpStatusCode})}`),z}subscribe($,D,z){const W={...this.config.defaultManifest,...z?.manifest},X={key:typeof $==="string"?$:$.key,bucket:$.bucket||this.config.defaultBucket||W.bucket},J=this.getOrCreateManifest(W),O=J.subscribe(X,D);return this.get(X,{manifest:W}).then((Z)=>{this.config.log(`NOTIFY (initial) ${E(X)}`),queueMicrotask(()=>{D(Z,void 0),J.poll()})}).catch((Z)=>{D(void 0,Z)}),O}refresh(){return Promise.all([...this.manifests.values()].map(($)=>$.poll()))}get subscriberCount(){return[...this.manifests.values()].reduce(($,D)=>$+D.subscriberCount,0)}}export{Q$ as MPS3};
